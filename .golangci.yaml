run:
  timeout: 3m
  modules-download-mode: readonly
  allow-parallel-runners: true
  build-tags:
    - docker

linters:
  enable:
    - errname
    - gofmt
    - goimports
    - stylecheck
    - importas
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - mirror
    - misspell
    - staticcheck
    - tagalign
    - testifylint
    - typecheck
    - unused
    - unconvert
    - unparam
    - wastedassign
    - whitespace
    - protogetter
    - revive
    - godot
    - bodyclose
    - gocritic
    - gocyclo
    #- gosec Too many different issues. Needs to be tackled in a separate PR.

linters-settings:
  gofmt:
    simplify: true
  staticcheck:
    checks: [ "all" ]
  gocyclo:
    min-complexity: 58 # This is our baseline at the moment.
  godot:
    scope: declarations
    capital: true
    period: true
  govet:
    enable-all: true
    disable:
      - shadow
      - fieldalignment
  goimports:
    local-prefixes: "github.com/openfga/openfga"
  importas:
    no-unaliased: true # Do not allow unaliased imports of aliased packages.
    no-extra-aliases: false # Do not allow non-required aliases.
    alias:
      - pkg: github.com/openfga/api/proto/openfga/v1
        alias: openfgav1

issues:
  exclude-use-default: false
  exclude-rules:
    - path: "(.+)_test.go"
      linters:
        - bodyclose
  exclude:
    - "should have a package comment" # stylecheck | revive
    - "exported (.+) should have comment" # revive
    - "comment on exported (.+) should be of the form" # revive
    - "(.+) name will be used as (.+) by other packages, and that stutters; consider calling this (.+)" # revive
    - "Error return value of (.+) is not checked" # errcheck
    - "unused-parameter" # revive
    - "exported func (.+) returns unexported type (.+), which can be annoying to use" # revive
