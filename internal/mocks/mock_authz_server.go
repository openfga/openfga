// Code generated by MockGen. DO NOT EDIT.
// Source: server_interface.go
//
// Generated by this command:
//
//	mockgen -source server_interface.go -destination ../../internal/mocks/mock_authz_server.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	openfgav1 "github.com/openfga/api/proto/openfga/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockServerInterface is a mock of ServerInterface interface.
type MockServerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServerInterfaceMockRecorder
}

// MockServerInterfaceMockRecorder is the mock recorder for MockServerInterface.
type MockServerInterfaceMockRecorder struct {
	mock *MockServerInterface
}

// NewMockServerInterface creates a new mock instance.
func NewMockServerInterface(ctrl *gomock.Controller) *MockServerInterface {
	mock := &MockServerInterface{ctrl: ctrl}
	mock.recorder = &MockServerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerInterface) EXPECT() *MockServerInterfaceMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockServerInterface) Check(ctx context.Context, req *openfgav1.CheckRequest) (*openfgav1.CheckResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", ctx, req)
	ret0, _ := ret[0].(*openfgav1.CheckResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Check indicates an expected call of Check.
func (mr *MockServerInterfaceMockRecorder) Check(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockServerInterface)(nil).Check), ctx, req)
}

// ListObjects mocks base method.
func (m *MockServerInterface) ListObjects(ctx context.Context, req *openfgav1.ListObjectsRequest) (*openfgav1.ListObjectsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListObjects", ctx, req)
	ret0, _ := ret[0].(*openfgav1.ListObjectsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjects indicates an expected call of ListObjects.
func (mr *MockServerInterfaceMockRecorder) ListObjects(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjects", reflect.TypeOf((*MockServerInterface)(nil).ListObjects), ctx, req)
}
