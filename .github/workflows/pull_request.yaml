name: Pull Request
on:
  merge_group:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.2
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: './go.mod'
          cache-dependency-path: './go.sum'
          check-latest: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@639cd343e1d3b897ff35927a75193d57cfcba299 # v3.6.0
        with:
          version: latest

  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.2

      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: './go.mod'
          cache-dependency-path: './go.sum'
          check-latest: true

      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      - name: Unit Tests
        run: make unit-test

      - name: upload coverage to codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          files: ./coverageunit.out
          verbose: true
          fail_ci_if_error: false

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@b43f5afc876383b2adc0ec0d3ff1998fe58eeda0 # v0.1.0

      - name: Run govulncheck
        run: govulncheck ./...

  functional-tests:
      runs-on: ubuntu-latest
      timeout-minutes: 15
      steps:
        - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.2

        - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
          with:
            go-version-file: './go.mod'
            cache-dependency-path: './go.sum'
            check-latest: true

        - id: go-cache-paths
          run: |
            echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
            echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0

        # build the openfga/openfga image for the functional tests
        - uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
          with:
            file: Dockerfile
            push: false # don't publish the built container for functional tests
            load: true
            tags: "openfga/openfga:functionaltest"

        - name: Functional Tests
          run: make functional-test

  go-bench:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.2

      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: './go.mod'
          cache-dependency-path: './go.sum'
          check-latest: true

      # Run benchmark with `go test -bench` and stores the output to a file
      - name: Run benchmark
        run: |
          set -o pipefail
          make bench | tee ${{ github.sha }}_bench_output.txt

      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ./cache
          key: ${{ runner.os }}-go-benchmark

      - name: Compare benchmark result
        uses: benchmark-action/github-action-benchmark@29e55772d85cc51b2a291bde13f33ef9014d2d1f # v1.17.0
        with:
          # What benchmark tool the output.txt came from
          tool: 'go'
          # Where the output from the benchmark tool is stored
          output-file-path: ${{ github.sha }}_bench_output.txt
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
          # Do not save the data
          save-data-file: false
          # Workflow will fail when an alert happens
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
