services:
  postgres:
    image: postgres:14
    container_name: postgres
    command: postgres -c 'max_connections=100'
    networks:
      - default
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    depends_on:
      postgres:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
    command: migrate
    networks:
      - default

  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga
    command: run
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      - OPENFGA_DATASTORE_MAX_OPEN_CONNS=100 #see postgres container
      - OPENFGA_PLAYGROUND_ENABLED=false
      - OPENFGA_TRACE_ENABLED=true
      - OPENFGA_TRACE_SAMPLE_RATIO=1
      - OPENFGA_TRACE_OTLP_ENDPOINT=otel-collector:4317
      - OPENFGA_METRICS_ENABLE_RPC_HISTOGRAMS=true
      - OPENFGA_DATASTORE_METRICS_ENABLED=true
      - OPENFGA_METRICS_ENABLED=true
      - OPENFGA_PROFILER_ENABLED=true
      - OPENFGA_LIST_OBJECTS_DEADLINE=3s

    networks:
      - default
    ports:
      - "8080:8080" #http
      - "8081:8081" #grpc
      - "3000:3000" #playground
      - "2112:2112" #prometheus metrics
      - "3001:3001"
    healthcheck:
      test: ["CMD", "/usr/local/bin/grpc_health_probe", "-addr=openfga:8081"]
      interval: 5s
      timeout: 30s
      retries: 3
