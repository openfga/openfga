tests:
  # https://github.com/openfga/openfga/issues/571
  - name: nil_pointer_exception
    stages:
      - model: |
          type user
          type folder
            relations
              define owner: [user] as self
              define writer: [user,user:*] as self or owner
          type document
            relations
              define can_read as writer from parent
              define parent: [document,folder] as self
              define viewer: [user,user:*] as self
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        assertions:
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c
  # https://github.com/openfga/openfga/issues/576
  - name: bug_objects_in_response_do_not_return_check_equals_true
    stages:
      - model: |
          type user
          type folder
            relations
              define owner: [user] as self
              define viewer: [user, user:*] as self or owner
          type document
            relations
              define can_read as viewer from parent
              define parent: [document, folder] as self
              define viewer: [user, user:*] as self
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        assertions:
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              #document:d is not expected
              - document:c
  - name: does_not_return_duplicates
    stages:
      - model: | #concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define admin: [user, user:*] as self but not blocked
        tuples:
          - user: user:a
            relation: admin
            object: repo:1
          - user: user:* #tuple grants access to the same as above
            relation: admin
            object: repo:1
        assertions:
          - request:
              user: user:a
              type: repo
              relation: admin
            expectation:
              - repo:1
      - model: | #reverse expansion
          type user
          type repo
            relations
              define admin: [user, user:*] as self
        assertions:
          - request:
              user: user:a
              type: repo
              relation: admin
            expectation:
              - repo:1
  - name: expands_wildcard_tuple
    stages:
      - model: | #concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user, user:*] as self but not blocked
        tuples:
          - user: user:*
            relation: owner
            object: repo:1
        assertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #reverse expansion
          type user
          type repo
            relations
              define owner: [user, user:*] as self
        assertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: considers_input_contextual_tuples
    stages:
      - model: | #concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        assertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a
                relation: owner
                object: repo:3
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
              - repo:3
      - model: | #reverse expansion
            type user
            type repo
              relations
                define owner: [user] as self
        assertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a
                relation: owner
                object: repo:3
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
              - repo:3
  - name: ignores_irrelevant_contextual_tuples_because_different_user
    stages:
      - model: | #concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        assertions:
          - contextualTuples:
              - user: user:b #different user
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #reverse expansion
          type user
          type team
            relations
              define member: [user] as self
          type repo
            relations
              define owner: [user, team#member] as self
        assertions:
          - contextualTuples:
              - user: user:b #different user
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: ignores_irrelevant_contextual_tuples_because_different_type
    stages:
      - model: | #concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
          type organization
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        assertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type, should be ignored
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #reverse expansion
          type user
          type repo
            relations
              define owner: [user] as self
          type organization
            relations
              define owner: [user] as self
        assertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type, should be ignored
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: ignores_irrelevant_tuples_because_different_user
    stages:
      - model: | # concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
          - user: user:aa #same prefix, but different user
            relation: owner
            object: repo:2
        assertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #reverse expansion
          type user
          type repo
            relations
              define owner: [user] as self
        assertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: ignores_duplicate_contextual_tuples
    stages:
      - model: | # concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        assertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a #same as above
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
      - model: | # reverse expansion
          type user
          type repo
            relations
              define owner: [user] as self
        assertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a # same as above
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
  - name: error_if_contextual_tuples_do_not_follow_type_restrictions
    stages:
      - model: | # concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
          type organization
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        assertions:
          - contextualTuples:
              - user: user:*  #not allowed
                relation: owner
                object: organization:1
            request:
              user: user:a
              type: repo
              relation: owner
            errorCode: 2027
      - model: | # reverse expansion
          type user
          type repo
            relations
              define owner: [user] as self
          type organization
            relations
              define owner: [user] as self
        assertions:
          - contextualTuples:
              - user: user:*  #not allowed
                relation: owner
                object: organization:1
            request:
              user: user:a
              type: repo
              relation: owner
            errorCode: 2027
  - name: error_if_unknown_type_in_request
    stages:
      - model: | # concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        assertions:
          - request:
              user: user:a
              type: unknown
              relation: owner
            errorCode: 2021 # type 'unknown' not found
      - model: | # reverse expansion
          type user
          type repo
            relations
              define owner: [user] as self
        assertions:
          - request:
              user: user:a
              type: unknown
              relation: owner
            errorCode: 2021 # type 'unknown' not found
  - name: error_if_unknown_relation_in_request
    stages:
      - model: | # concurrent checks
          type user
          type repo
            relations
              define blocked: [user] as self
              define owner: [user] as self but not blocked
        assertions:
          - request:
              user: user:a
              type: repo
              relation: unknown
            errorCode: 2022 # relation 'unknown' not found
      - model: | # reverse expansion
          type user
          type repo
            relations
              define owner: [user] as self
        assertions:
          - request:
              user: user:a
              type: repo
              relation: unknown
            errorCode: 2022 # relation 'unknown' not found