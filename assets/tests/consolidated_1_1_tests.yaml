tests:
  - name: this
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user]
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:

  - name: computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: writer
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: writer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:aardvark
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:aardvark
              type: document
              relation: writer
            expectation:
              - document:1

  - name: tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:x
          - object: folder:x
            relation: viewer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: this_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: [user] or writer
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2

  - name: this_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: [user] and writer
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: viewer
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: this_and_exclusion_base
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: [user] but not writer
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: viewer
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: computed_userset_and_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define owner: [user]
              define writer: owner
              define viewer: writer
        tuples:
          - object: document:1
            relation: owner
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: computed_userset_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer or editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: editor
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2

  - name: simple_computeduserset_indirect_ref
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
              define can_view: viewer
        tuples:
          - user: user:anne
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b

  - name: computed_userset_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer and editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: computed_userset_and_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer but not editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: tuple_to_userset_and_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define viewer: writer

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: tuple_to_userset_and_tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type group
            relations
              define member: [user]

          type folder
            relations
              define parent: [group]
              define viewer: member from parent

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: parent
            user: group:G
          - object: group:G
            relation: member
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: tuple_to_userset_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer or editor

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: editor
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: tuple_to_userset_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer and editor

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: editor
            user: user:aardvark
          - object: folder:X
            relation: writer
            user: user:badger
          - object: folder:X
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: tuple_to_userset_and_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer but not editor

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: editor
            user: user:aardvark
          - object: folder:X
            relation: writer
            user: user:badger
          - object: folder:X
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: union_and_tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: writer or viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: union_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer or editor or owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: owner
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3

  - name: union_and_intersection
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as writer or (editor and owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
          - object: document:4
            relation: owner
            user: user:duck
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:

  - name: union_and_exclusion
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user]  as self
              define editor: [user]  as self
              define owner: [user]  as self
              define viewer as writer or (editor but not owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
          - object: document:4
            relation: owner
            user: user:duck
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:

  - name: intersection_and_tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: writer and viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: viewer
            user: user:badger
          - object: document:2
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: intersection_and_union
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as writer and (editor or owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:4
            relation: editor
            user: user:duck
          - object: document:5
            relation: owner
            user: user:eagle
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:

  - name: intersection_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer and editor and owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
          - object: document:5
            relation: editor
            user: user:eagle
          - object: document:6
            relation: owner
            user: user:fox
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
          - tuple:
              object: document:6
              relation: viewer
              user: user:fox
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:fox
              type: document
              relation: viewer
            expectation:

  - name: intersection_and_exclusion
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as writer and (editor but not owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
          - object: document:5
            relation: editor
            user: user:eagle
          - object: document:6
            relation: owner
            user: user:fox
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
          - tuple:
              object: document:6
              relation: viewer
              user: user:fox
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:fox
              type: document
              relation: viewer
            expectation:

  - name: exclusion_and_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer but not editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: exclusion_and_tuple_to_userset_in_base
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: viewer from parent but not writer
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: viewer
            user: user:badger
          - object: document:2
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:

  - name: exclusion_and_tuple_to_userset_in_subtract
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: writer but not viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: viewer
            user: user:badger
          - object: document:2
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:2

  - name: exclusion_and_union_in_base
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as (writer or editor) but not owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
          - object: document:5
            relation: editor
            user: user:eagle
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: true
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
              - document:4
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
              - document:5

  - name: exclusion_and_union_in_subtract
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as writer but not (editor or owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3

  - name: exclusion_and_intersection_in_base
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as (writer and editor) but not owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:4
            relation: editor
            user: user:duck
          - object: document:5
            relation: owner
            user: user:eagle
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:

  - name: exclusion_and_intersection_in_subtract
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as writer but not (editor and owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
              - document:4

  - name: exclusion_and_exclusion_in_base
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as (writer but not editor) but not owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3

  - name: exclusion_and_exclusion_in_subtract
    stages:
      - model: |
          type user

          type document
            relations
              define writer: [user] as self
              define editor: [user] as self
              define owner: [user] as self
              define viewer as writer but not (editor but not owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3

  - name: userset_as_user
    stages:
      - model: |
          model
            schema 1.1
          type user

          type group
            relations
              define member: [user]

          type document
            relations
              define viewer: [group#member]
        tuples:
          - object: document:1
            relation: viewer
            user: group:x#member
          - object: group:x
            relation: member
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: group:x#member
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: group:x#member
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: wildcard_direct
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user:*]
        tuples:
          - object: document:public
            relation: viewer
            user: user:*
        checkAssertions:
          - tuple:
              object: document:public
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:public
              relation: viewer
              user: user:*
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:public
          - request:
              user: user:*
              type: document
              relation: viewer
            expectation:
              - document:public

  - name: prior_type_restrictions_ignored
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user]
        tuples:
          - object: document:1
            relation: viewer
            user: user:jon
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
      - model: |
          model
            schema 1.1
          type user
          type employee

          type document
            relations
              define viewer: [employee]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:

  - name: wildcard_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define writer: [user:*]
              define viewer: [user] or writer
        tuples:
          - object: document:public
            relation: writer
            user: user:*
        checkAssertions:
          - tuple:
              object: document:public
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:public

  - name: check_with_invalid_tuple_in_store
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
        tuples:
          - object: folder:x
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: parent
            user: folder:x
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:

  - name: this_with_contextual_tuples
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user]
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1

  - name: wildcard_and_userset_restriction
    stages:
      - model: |
          model
            schema 1.1
          type user
          type user2
          type group
            relations
              define member: [user2]
          type document
            relations
              define viewer: [user:*, group#member]
        tuples:
          - object: document:public
            relation: viewer
            user: user:*
          - object: document:public
            relation: viewer
            user: group:fga#member
          - object: group:fga
            relation: member
            user: user2:bob
        checkAssertions:
          - tuple:
              object: document:public
              relation: viewer
              user: user2:bob
            expectation: true
        listObjectsAssertions:
          - request:
              user: user2:bob
              type: document
              relation: viewer
            expectation:
              - document:public

  - name: wildcard_obeys_the_types_in_stages
    stages:
      - model: |
          model
            schema 1.1
          type user

          type employee

          type document
            relations
              define writer: [employee:*]
              define viewer: [user] or writer
        tuples:
          - object: document:1
            relation: writer
            user: employee:*
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: employee:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: employee:badger
              type: document
              relation: viewer
            expectation:
              - document:1
      - model: |
          model
            schema 1.1
          type user

          type employee
          type document
            relations
              define writer: [user:*]
              define viewer: [user] or writer
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: employee:badger
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: employee:badger
              type: document
              relation: viewer
            expectation:

  - name: validation_relation_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
        checkAssertions:
          - tuple:
              object: user:aardvark
              relation: viewer
              user: user:badger
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: user:badger
              type: user
              relation: viewer
            errorCode: 2022

  - name: validation_type_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        listObjectsAssertions:
          - request:
              user: user:badger
              type: group #non-existent
              relation: viewer
            errorCode: 2021

  - name: validation_user_type_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: folder:x
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: folder:x
              type: document
              relation: viewer
            errorCode: 2000

  - name: validation_userset_type_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: folder:x#writer
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: folder:x#writer
              type: document
              relation: viewer
            errorCode: 2000

  - name: validation_userset_relation_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: document:x#writer
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: document:x#writer
              type: document
              relation: viewer
            errorCode: 2000

  - name: validation_user_invalid
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: a:b:c
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: a:b:c
              type: document
              relation: viewer
            errorCode: 2000

  - name: validation_invalid_object_type_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: folder:x #invalid
                relation: viewer
                user: user:aardvark
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: folder:x #invalid
                relation: viewer
                user: user:aardvark
            errorCode: 2027

  - name: validation_invalid_relation_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: writer #invalid
                user: user:aardvark
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: writer #invalid
                user: user:aardvark
            errorCode: 2027

  - name: validation_invalid_user_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: viewer
                user: employee:aardvark #invalid
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: employee:aardvark #invalid
            errorCode: 2027

  - name: validation_invalid_wildcard_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: viewer
                user: user:* #invalid
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: user:* #invalid
            errorCode: 2027

  - name: val_contextual_tuples_and_wildcard_in_ttu_evaluation
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: [user]
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: parent
                user: user:* #invalid
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: parent
                user: user:* #invalid
            errorCode: 2027
  - name: list_objects_considers_input_contextual_tuples
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a
                relation: owner
                object: repo:3
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
              - repo:3
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a
                relation: owner
                object: repo:3
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
              - repo:3
  - name: ignores_irrelevant_contextual_tuples_because_different_user
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:b #different user
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type team
            relations
              define member: [user]
          type repo
            relations
              define owner: [user, team#member]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:b #different user
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: ignores_irrelevant_contextual_tuples_because_different_type
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
          type organization
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type, should be ignored
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
          type organization
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type, should be ignored
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: list_objects_ignores_irrelevant_tuples_because_different_user
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
          - user: user:aa #same prefix, but different user
            relation: owner
            object: repo:2
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: list_objects_ignores_duplicate_contextual_tuples
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a #same as above
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a # same as above
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
  - name: error_if_contextual_tuples_do_not_follow_type_restrictions
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
          type organization
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:* #not allowed
                relation: owner
                object: organization:1
            request:
              user: user:a
              type: repo
              relation: owner
            errorCode: 2027
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
          type organization
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:* #not allowed
                relation: owner
                object: organization:1
            request:
              user: user:a
              type: repo
              relation: owner
            errorCode: 2027
  - name: list_objects_error_if_unknown_type_in_request
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        listObjectsAssertions:
          - request:
              user: user:a
              type: unknown
              relation: owner
            errorCode: 2021 # type 'unknown' not found
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - request:
              user: user:a
              type: unknown
              relation: owner
            errorCode: 2021 # type 'unknown' not found
  - name: list_objects_error_if_unknown_relation_in_request
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: unknown
            errorCode: 2022 # relation 'unknown' not found
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: unknown
            errorCode: 2022 # relation 'unknown' not found
  - name: relations_not_defined_in_some_child_type
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user]
              define writer: [user,user:*] or owner
          type document
            relations
              define can_read: writer from parent
              define parent: [document,folder]
              define viewer: [user,user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c

  # https://github.com/openfga/openfga/issues/576
  - name: same_relation_name_different_type
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user]
              define viewer: [user, user:*] or owner
          type document
            relations
              define can_read: viewer from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              #document:d is not expected
              - document:c

  - name: computed_user_indirect_ref
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user]
        tuples:
          - user: user:anne
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c

  - name: computed_user_indirect_ref_extra_indirection
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [folder]
              define viewer: [user] or owner or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c

  - name: three_prong_relation
    stages:
      - model: |
          model
            schema 1.1
          type user
          type module
            relations
              define owner: [user] or owner from parent
              define parent: [document, module]
              define viewer: [user] or owner or viewer from parent
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [module, folder]
              define viewer: [user] or owner or viewer from parent
          type document
            relations
              define owner: [user] or owner from parent
              define parent: [folder, document]
              define viewer: [user] or owner or viewer from parent
        tuples:
          - user: user:anne
            relation: owner
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:a
          - user: document:a
            relation: parent
            object: module:b
          - user: module:b
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: module:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: module:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:b
          - request:
              user: user:anne
              type: module
              relation: viewer
            expectation:
              - module:a
              - module:b

  - name: three_prong_relation_loop
    stages:
      - model: |
          model
            schema 1.1
          type user
          type module
            relations
              define owner: [user] or owner from parent
              define parent: [document, module]
              define viewer: [user] or owner or viewer from parent
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [module, folder]
              define viewer: [user] or owner or viewer from parent
          type document
            relations
              define owner: [user] or owner from parent
              define parent: [folder, document]
              define viewer: [user] or owner or viewer from parent
        tuples:
          - user: user:anne
            relation: owner
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:a
          - user: document:a
            relation: parent
            object: module:b
          - user: module:b
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:b
          - user: document:b
            relation: parent
            object: module:a
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: module:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: module:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:b
          - request:
              user: user:anne
              type: module
              relation: viewer
            expectation:
              - module:a
              - module:b

  - name: three_prong_relation_possible_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user
          type module
            relations
              define owner: [user] or has_owned from parent
              define parent: [document, module]
              define has_owned: owner
              define viewer: [user] or has_owned or viewer from parent
          type folder
            relations
              define owner: [user] or has_owned from parent
              define parent: [module, folder]
              define has_owned: owner
              define viewer: [user] or has_owned or viewer from parent
          type document
            relations
              define banned: [user]
              define owner: [user] or has_owned from parent
              define has_owned: owner but not banned
              define parent: [folder, document]
              define viewer: [user] or has_owned or viewer from parent
        tuples:
          - user: user:anne
            relation: owner
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:a
          - user: document:a
            relation: parent
            object: module:b
          - user: module:b
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: module:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: module:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:b
          - request:
              user: user:anne
              type: module
              relation: viewer
            expectation:
              - module:a
              - module:b

  - name: computed_user_multi_route
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user] or owner from parent
              define can_modify: owner
              define parent: [folder]
              define viewer: [user] or can_modify or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent or can_modify from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c

  - name: computed_user_indirect_ref_same_rel_name
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [folder]
              define viewer: [user] or owner or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_view: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: document:d
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_view
            expectation:
              - document:c
              - document:d

  - name: computed_user_indirect_ref_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user, user:*] or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:*
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c

  - name: computed_user_indirect_ref_extra_indirection_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user, user:*] or owner from parent
              define parent: [folder]
              define viewer: [user, user:*] or owner or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:*
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c

  - name: two_level_computed_user_indirect_ref
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
              define can_look: viewer
              define can_view: can_look

          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user]
        tuples:
          - user: user:anne
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c

  - name: ttu_and_computed_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type folder
            relations
              define can_view: viewer or can_view from parent
              define parent: [folder]
              define viewer: [group#member]
          type document
            relations
              define parent: [folder]
              define viewer: can_view from parent
        tuples:
          - user: user:anne
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:a
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:b

  - name: ttu_and_computed_ttu_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user, user:*]
          type folder
            relations
              define can_view: viewer or can_view from parent
              define parent: [folder]
              define viewer: [group#member]
          type document
            relations
              define parent: [folder]
              define viewer: can_view from parent
        tuples:
          - user: user:*
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:a
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:b

  - name: ttu_ttu_and_computed_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type module
            relations
              define can_view: viewer or can_view from parent
              define parent: [module]
              define viewer: [group#member]
          type folder
            relations
              define parent: [module, folder]
              define can_view: can_view from parent
          type document
            relations
              define parent: [folder]
              define viewer: can_view from parent
        tuples:
          - user: user:anne
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:a
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:b

  - name: contextual_tuple_ref_relation_disjoint
    stages:
      - model: |
          model
            schema 1.1
          type user
          type company
            relations
              define admin: [user]
              define management: [user]
              define employee: [user] or admin
          type group
            relations
              define corp: [company]
              define member: employee from corp
          type document
            relations
              define viewer: [group#member]
          type diagram
            relations
              define parent: [document]
              define viewer: viewer from parent
        tuples:
          - object: company:abc
            relation: management
            user: user:anne
          - object: group:fga
            relation: corp
            user: company:abc
          - object: document:a
            relation: viewer
            user: group:fga#member
          - object: diagram:a
            relation: parent
            user: document:a
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: false
          - tuple:
              user: user:anne
              relation: viewer
              object: diagram:a
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:anne
              type: diagram
              relation: viewer
            expectation:

  - name: reverse_expand_relation_not_match
    stages:
      - model: |
          model
            schema 1.1
          type user
          type company
            relations
              define admin: [user]
              define management: [user]
              define employee: [user] or admin
          type group
            relations
              define observer: [company]
              define owner: [company]
              define admin: admin from owner
              define member: employee from owner
          type document
            relations
              define owner: [group]
              define viewer: member from owner or observer from owner
        tuples:
          - object: company:abc
            relation: employee
            user: user:anne
          - object: document:a
            relation: owner
            user: group:fga
          - object: group:fga
            relation: observer
            user: company:abc
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:

  - name: exclusion_for_some_relations
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type folder
            relations
              define owner: [group]
              define viewer: member from owner
          type document
            relations
              define banned: [user]
              define owner: [folder]
              define viewer: viewer from owner
              define can_view: viewer but not banned
              define can_see: can_view
        tuples:
          - user: user:anne
            relation: member
            object: group:fga
          - user: group:fga
            relation: owner
            object: folder:a
          - user: folder:a
            relation: owner
            object: document:a
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_see
              object: document:a
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
          - request:
              user: user:anne
              type: document
              relation: can_view
            expectation:
              - document:a
          - request:
              user: user:anne
              type: document
              relation: can_see
            expectation:
              - document:a

  - name: evaluate_userset_in_computed_relation_of_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [organization]
              define reader: repo_admin from owner
          type organization
            relations
              define member: [user]
              define repo_admin: [organization#member]
        tuples:
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:openfga#member
            relation: repo_admin
            object: organization:openfga
          - user: user:erik
            relation: member
            object: organization:openfga
        checkAssertions:
          - tuple:
              user: user:erik
              relation: reader
              object: repo:openfga/openfga
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:erik
              type: repo
              relation: reader
            expectation:
              - repo:openfga/openfga

  - name: nested_ttu_involving_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user
          type organization
            relations
              define member: [user]
              define viewer: [user] and member
          type folder
            relations
              define parent: [organization]
              define viewer: viewer from parent
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
              define can_view: viewer
        tuples:
          - user: user:jon
            relation: member
            object: organization:openfga
          - user: user:jon
            relation: viewer
            object: organization:openfga
          - user: organization:openfga
            relation: parent
            object: folder:X
          - user: folder:X
            relation: parent
            object: document:1
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
  - name: nested_ttu_involving_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user
          type organization
            relations
              define restricted: [user]
              define viewer: [user] but not restricted
          type folder
            relations
              define parent: [organization]
              define viewer: viewer from parent
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
              define can_view: viewer
        tuples:
          - user: user:bob
            relation: restricted
            object: organization:openfga
          - user: user:jon
            relation: viewer
            object: organization:openfga
          - user: organization:openfga
            relation: parent
            object: folder:X
          - user: folder:X
            relation: parent
            object: document:1
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: false
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: can_view
              object: document:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: can_view
            expectation:
  - name: userset_with_intersection_in_computed_relation_of_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [organization]
              define allowed: [user]
              define reader: repo_admin from owner and allowed
              define can_read: reader
          type organization
            relations
              define member: [user]
              define repo_admin: [organization#member]
        tuples:
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:openfga#member
            relation: repo_admin
            object: organization:openfga
          - user: user:erik
            relation: member
            object: organization:openfga
          - user: user:jim
            relation: member
            object: organization:openfga
          - user: user:erik
            relation: allowed
            object: repo:openfga/openfga
        checkAssertions:
          - tuple:
              user: user:erik
              relation: reader
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: reader
              object: repo:openfga/openfga
            expectation: false
          - tuple:
              user: user:erik
              relation: can_read
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: can_read
              object: repo:openfga/openfga
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:erik
              type: repo
              relation: reader
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: reader
            expectation:
          - request:
              user: user:erik
              type: repo
              relation: can_read
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: can_read
            expectation:
  - name: userset_with_exclusion_in_computed_relation_of_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [organization]
              define restricted: [user]
              define reader: repo_admin from owner but not restricted
              define can_read: reader
          type organization
            relations
              define member: [user]
              define repo_admin: [organization#member]
        tuples:
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:openfga#member
            relation: repo_admin
            object: organization:openfga
          - user: user:erik
            relation: member
            object: organization:openfga
          - user: user:jim
            relation: member
            object: organization:openfga
          - user: user:jim
            relation: restricted
            object: repo:openfga/openfga
        checkAssertions:
          - tuple:
              user: user:erik
              relation: reader
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: reader
              object: repo:openfga/openfga
            expectation: false
          - tuple:
              user: user:erik
              relation: can_read
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: can_read
              object: repo:openfga/openfga
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:erik
              type: repo
              relation: reader
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: reader
            expectation:
          - request:
              user: user:erik
              type: repo
              relation: can_read
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: can_read
            expectation:
  - name: relation_with_wildcard_involving_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define allowed: [user]
              define viewer: [user:*] and allowed
              define can_view: viewer
        tuples:
          - user: user:jon
            relation: allowed
            object: document:1
          - user: user:*
            relation: viewer
            object: document:1
          - user: user:*
            relation: viewer
            object: document:2
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:2
            expectation: false
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: can_view
              object: document:2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: can_view
            expectation:
  - name: relation_with_wildcard_involving_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define restricted: [user]
              define viewer: [user:*] but not restricted
              define can_view: viewer
        tuples:
          - user: user:bob
            relation: restricted
            object: document:1
          - user: user:*
            relation: viewer
            object: document:1
          - user: user:*
            relation: viewer
            object: document:2
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: false
          - tuple:
              user: user:bob
              relation: viewer
              object: document:2
            expectation: true
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: can_view
              object: document:1
            expectation: false
          - tuple:
              user: user:bob
              relation: can_view
              object: document:2
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
              - document:2
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
              - document:2
          - request:
              user: user:bob
              type: document
              relation: can_view
            expectation:
              - document:2
  - name: list_objects_does_not_return_duplicates
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define admin: [user, user:*] but not blocked
        tuples:
          - user: user:a
            relation: admin
            object: repo:1
          - user: user:* #tuple grants access to the same as above
            relation: admin
            object: repo:1
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: admin
            expectation:
              - repo:1
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define admin: [user, user:*]
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: admin
            expectation:
              - repo:1
  - name: list_objects_expands_wildcard_tuple
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user, user:*] but not blocked
              define can_own: owner
        tuples:
          - user: user:*
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
          - request:
              user: user:a
              type: repo
              relation: can_own
            expectation:
              - repo:1
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user, user:*]
              define can_own: owner
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
      - model: | #complex model
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define owner: [group]
              define folder_reader: [user, group#member] or folder_reader from owner or folder_reader from parent
              define blocked: [user, user:*, group#member] or nblocked from parent
              define unblocked: [user, group#member]
              define nblocked: blocked but not unblocked
              define allowed: [user, user:*, group#member] or allowed from parent
              define super_allowed: [user, group#member] or super_allowed from parent
              define reader: folder_reader and allowed and super_allowed
              define can_read: reader but not nblocked
          type group
            relations
              define parent: [group]
              define allowed: [user, group#member] or allowed from parent
              define super_allowed: [user, group#super_allowed]
              define blocked: [user, group#member] or blocked from parent
              define og_member: [user] or member from parent
              define allowed_member: og_member and allowed and super_allowed
              define member: allowed_member but not blocked
              define folder_reader: [group#member] or folder_reader from parent
        tuples:
          - user: user:anne
            relation: og_member
            object: group:marketing
          - user: user:anne
            relation: allowed
            object: group:marketing
          - user: user:anne
            relation: super_allowed
            object: group:marketing
          - user: user:beth
            relation: og_member
            object: group:marketing
          - user: user:beth
            relation: allowed
            object: group:marketing
          - user: user:beth
            relation: super_allowed
            object: group:marketing
          - user: user:carl
            relation: og_member
            object: group:marketing
          - user: user:carl
            relation: allowed
            object: group:marketing
          - user: user:dan
            relation: og_member
            object: group:marketing
          - user: user:dan
            relation: allowed
            object: group:marketing
          - user: user:dan
            relation: super_allowed
            object: group:marketing
          - user: user:dan
            relation: blocked
            object: group:marketing
          - user: user:emily
            relation: og_member
            object: group:marketing
          - user: user:emily
            relation: allowed
            object: group:marketing
          - user: user:emily
            relation: super_allowed
            object: group:marketing
          - user: user:gabriel
            relation: og_member
            object: group:marketing
          - user: user:gabriel
            relation: allowed
            object: group:marketing
          - user: user:gabriel
            relation: super_allowed
            object: group:marketing
          - user: user:harriette
            relation: og_member
            object: group:marketing
          - user: user:harriette
            relation: allowed
            object: group:marketing
          - user: user:harriette
            relation: super_allowed
            object: group:marketing
          - user: user:gabriel
            relation: og_member
            object: group:admin
          - user: user:gabriel
            relation: allowed
            object: group:admin
          - user: user:gabriel
            relation: super_allowed
            object: group:admin
          - user: group:marketing#member
            relation: folder_reader
            object: group:marketing
          - user: group:marketing
            relation: parent
            object: group:digitalmktg
          - user: group:marketing#super_allowed
            relation: super_allowed
            object: group:digitalmktg
          - user: group:digitalmktg
            relation: owner
            object: folder:1
          - user: folder:1
            relation: parent
            object: folder:2
          - user: folder:2
            relation: parent
            object: folder:3
          - user: folder:3
            relation: parent
            object: folder:4
          - user: folder:4
            relation: parent
            object: folder:5
          - user: group:marketing#member
            relation: allowed
            object: folder:1
          - user: group:marketing#member
            relation: super_allowed
            object: folder:1
          - user: user:beth
            relation: blocked
            object: folder:2
          - user: user:emily
            relation: blocked
            object: folder:1
          - user: user:emily
            relation: unblocked
            object: folder:2
          - user: user:gabriel
            relation: blocked
            object: folder:1
          - user: user:harriette
            relation: unblocked
            object: folder:5
          - user: user:*
            relation: blocked
            object: folder:4
          - user: user:*
            relation: allowed
            object: folder:4
          - user: group:admin#member
            relation: unblocked
            object: folder:2
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_read
              object: folder:3
            expectation: True
          - tuple:
              user: user:beth
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:carl
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:dan
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:emily
              relation: can_read
              object: folder:3
            expectation: True
          - tuple:
              user: user:frida
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:gabriel
              relation: can_read
              object: folder:3
            expectation: True
          - tuple:
              user: user:harriette
              relation: can_read
              object: folder:3
            expectation: True
        listObjectsAssertions:
          - request:
              user: user:anne
              relation: can_read
              type: folder
            expectation:
              - folder:1
              - folder:2
              - folder:3
          - request:
              user: user:beth
              relation: can_read
              type: folder
            expectation:
              - folder:1
          - request:
              user: user:carl
              relation: can_read
              type: folder
            expectation: []
          - request:
              user: user:dan
              relation: can_read
              type: folder
            expectation: []
          - request:
              user: user:emily
              relation: can_read
              type: folder
            expectation:
              - folder:2
              - folder:3
          - request:
              user: user:frida
              relation: can_read
              type: folder
            expectation: []
          - request:
              user: user:gabriel
              relation: can_read
              type: folder
            expectation:
              - folder:2
              - folder:3
          - request:
              user: user:harriette
              relation: can_read
              type: folder
            expectation:
              - folder:1
              - folder:2
              - folder:3
              - folder:5
  - name: resolution_too_complex_throws_error
    stages:
      - model: |
          model
            schema 1.1
          type user
          type resource
            relations
              define a1: a2
              define a2: a3
              define a3: a4
              define a4: a5
              define a5: a6
              define a6: a7
              define a7: a8
              define a8: a9
              define a9: a10
              define a10: a11
              define a11: a12
              define a12: a13
              define a13: a14
              define a14: a15
              define a15: a16
              define a16: a17
              define a17: a18
              define a18: a19
              define a19: a20
              define a20: a21
              define a21: a22
              define a22: a23
              define a23: a24
              define a24: a25
              define a25: a26
              define a26: [user]
        tuples:
          - object: resource:1
            relation: a26
            user: user:jon
        checkAssertions:
          - tuple:
              object: resource:abc
              relation: a1
              user: user:maria
            errorCode: 2002
        listObjectsAssertions:
          - request:
              type: resource
              relation: a1
              user: user:jon
            errorCode: 2002
  - name: race_condition_same_user_same_object_diff_relation
    stages:
      - model: |
          model
            schema 1.1
          type user
          type test_type
            relations
              define relation1: [user]
              define relation2: [user]
          type list_type
            relations
              define list_relation: [test_type#relation1,test_type#relation2]
        tuples:
          - user: user:test_user
            relation: relation1
            object: test_type:test_type1
          - user: user:test_user
            relation: relation2
            object: test_type:test_type1
          - user: test_type:test_type1#relation1
            relation: list_relation
            object: list_type:list_type1
        checkAssertions:
          - tuple:
              user: user:test_user
              relation: list_relation
              object: list_type:list_type1
            expectation: true
          - tuple:
              user: user:test_user
              relation: list_relation
              object: list_type:list_type2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:test_user
              type: list_type
              relation: list_relation
            expectation:
              - list_type:list_type1
  - name: follows_correct_graph_edges
    stages:
      - model: |
          model
            schema 1.1
          type user

          type repo
            relations
              define admin: [user] or repo_admin from owner
              define owner: [organization]

          type organization
            relations
              define member: [user] or owner
              define owner: [user]
              define repo_admin: [user, organization#member]
        tuples:
          - user: user:alex
            relation: member
            object: organization:openfga
          - user: user:alex
            relation: member
            object: organization:acme
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:acme
            relation: owner
            object: repo:acme/acme
        listObjectsAssertions:
          - request:
              user: user:alex
              type: repo
              relation: admin
            expectation: []
  - name: list_objects_with_subcheck_encounters_cycle
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define allowed: [user, document#viewer]
              define viewer: [user, document#allowed] and allowed
        tuples:
          - user: user:jon
            relation: viewer
            object: document:1
          - user: document:1#viewer
            relation: allowed
            object: document:1
          - user: document:1#allowed
            relation: viewer
            object: document:1
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            errorCode: 2002
  - name: list_objects_with_subcheck_resolution_depth_exceeded
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define a1: a2
              define a2: a3
              define a3: a4
              define a4: a5
              define a5: a6
              define a6: a7
              define a7: a8
              define a8: a9
              define a9: a10
              define a10: a11
              define a11: a12
              define a12: a13
              define a13: a14
              define a14: a15
              define a15: a16
              define a16: a17
              define a17: a18
              define a18: a19
              define a19: a20
              define a20: a21
              define a21: a22
              define a22: a23
              define a23: a24
              define a24: a25
              define a25: a26
              define a26: [user]
              define viewer: [user] and a1
        tuples:
          - user: user:jon
            relation: viewer
            object: document:1
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            errorCode: 2002
  - name: direct_relationships_with_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define allowed: [user]
              define viewer: [user] and allowed
        tuples:
          - user: user:jon
            relation: viewer
            object: document:1
          - user: user:jon
            relation: allowed
            object: document:1
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
