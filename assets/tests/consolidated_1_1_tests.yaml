tests:
  - name: this
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user]
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1 # exists in store
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2 # does not exist in store
              relation: viewer
            expectation:
  - name: computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: writer
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: writer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:aardvark
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:aardvark
              type: document
              relation: writer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:1
              relation: writer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
  - name: tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:x
          - object: folder:x
            relation: viewer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - folder
              object: document:1
              relation: parent
            expectation:
              - folder:x
          - request:
              filters:
                - folder
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:1
              relation: parent
            expectation:
  - name: this_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: [user] or writer
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger

  - name: this_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: [user] and writer
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: viewer
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark

  - name: this_and_exclusion_base
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define viewer: [user] but not writer
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: viewer
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
  - name: computed_userset_and_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define owner: [user]
              define writer: owner
              define viewer: writer
        tuples:
          - object: document:1
            relation: owner
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark

  - name: computed_userset_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer or editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: editor
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger

  - name: simple_computeduserset_indirect_ref
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
              define can_view: viewer
        tuples:
          - user: user:anne
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - folder
              object: folder:a
              relation: can_view
              expectation:

  - name: computed_userset_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer and editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
  - name: computed_userset_and_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer but not editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
  - name: tuple_to_userset_and_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define viewer: writer

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - folder
              object: document:1
              relation: viewer
            expectation:

  - name: tuple_to_userset_and_tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type group
            relations
              define member: [user]

          type folder
            relations
              define parent: [group]
              define viewer: member from parent

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: parent
            user: group:G
          - object: group:G
            relation: member
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - group
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - folder
              object: document:1
              relation: viewer
            expectation:

  - name: tuple_to_userset_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer or editor

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: editor
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
              - user:badger
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
          - request:
              filters:
                - folder#editor
              object: document:1
              relation: viewer
            expectation:
             - folder:X#editor
          - request:
              filters:
                - folder#writer
              object: document:1
              relation: viewer
            expectation:
              - folder:X#writer
          - request:
              filters:
                - folder#viewer
              object: document:1
              relation: viewer
            expectation:
              - folder:X#viewer
          - request:
              filters:
                - folder
              object: document:1
              relation: viewer
            expectation:
  - name: tuple_to_userset_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer and editor

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: editor
            user: user:aardvark
          - object: folder:X
            relation: writer
            user: user:badger
          - object: folder:X
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - folder#editor
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - folder#writer
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - folder#viewer
              object: document:1
              relation: viewer
            expectation:
              - folder:X#viewer
          - request:
              filters:
                - folder
              object: document:1
              relation: viewer
            expectation:
  - name: tuple_to_userset_and_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer but not editor

          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: editor
            user: user:aardvark
          - object: folder:X
            relation: writer
            user: user:badger
          - object: folder:X
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:badger
          - request:
              filters:
                - folder#editor
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - folder#writer
              object: document:1
              relation: viewer
            expectation:
             - folder:X#writer
          - request:
              filters:
                - folder#viewer
              object: document:1
              relation: viewer
            expectation:
              - folder:X#viewer
  - name: union_and_tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: writer or viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:badger
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
              - user:badger
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:

  - name: union_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer or editor or owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: owner
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
              - user:cheetah

  - name: union_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer or (editor and owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
          - object: document:4
            relation: owner
            user: user:duck
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:4
              relation: viewer
            expectation:
  - name: union_and_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer or (editor but not owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
          - object: document:4
            relation: owner
            user: user:duck
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
              - user:badger
          - request:
              filters:
                - document#writer
              object: document:1
              relation: viewer
            expectation:
              - document:1#writer
          - request:
              filters:
                - document#editor
              object: document:1
              relation: viewer
            expectation:
             - document:1#editor
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
              - user:cheetah
  - name: intersection_and_tuple_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: writer and viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: viewer
            user: user:badger
          - object: document:2
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
  - name: intersection_and_union
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer and (editor or owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:4
            relation: editor
            user: user:duck
          - object: document:5
            relation: owner
            user: user:eagle
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:4
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:5
              relation: viewer
            expectation:
  - name: intersection_and_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer and editor and owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
          - object: document:5
            relation: editor
            user: user:eagle
          - object: document:6
            relation: owner
            user: user:fox
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
          - tuple:
              object: document:6
              relation: viewer
              user: user:fox
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:fox
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:4
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:5
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:6
              relation: viewer
            expectation:
  - name: intersection_and_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer and (editor but not owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
          - object: document:5
            relation: editor
            user: user:eagle
          - object: document:6
            relation: owner
            user: user:fox
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
          - tuple:
              object: document:6
              relation: viewer
              user: user:fox
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:fox
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - document#writer
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
  - name: exclusion_and_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define viewer: writer but not editor
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
  - name: exclusion_and_tuple_to_userset_in_base
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: viewer from parent but not writer
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: viewer
            user: user:badger
          - object: document:2
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:badger
          - request:
              filters:
                - folder#viewer
              object: document:1
              relation: viewer
            expectation:
             - folder:X#viewer
          - request:
              filters:
                - document#writer
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
  - name: exclusion_and_tuple_to_userset_in_subtract
    stages:
      - model: |
          model
            schema 1.1
          type user

          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define writer: [user]
              define viewer: writer but not viewer from parent
        tuples:
          - object: document:1
            relation: parent
            user: folder:X
          - object: folder:X
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: folder:X
            relation: viewer
            user: user:badger
          - object: document:2
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:2
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:cheetah
  - name: exclusion_and_union_in_base
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: (writer or editor) but not owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: editor
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
          - object: document:5
            relation: editor
            user: user:eagle
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: true
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
              - document:4
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
              - document:5
        listUsersAssertions:
          - request:
              filters:
                - document#writer
              object: document:1
              relation: viewer
            expectation:
             - document:1#writer
          - request:
              filters:
                - document#editor
              object: document:1
              relation: viewer
            expectation:
              - document:1#editor
          - request:
              filters:
                - user
              object: document:4
              relation: viewer
            expectation:
              - user:duck
          - request:
              filters:
                - user
              object: document:5
              relation: viewer
            expectation:
              - user:eagle
  - name: exclusion_and_union_in_subtract
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer but not (editor or owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
              - user:cheetah
  - name: exclusion_and_intersection_in_base
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: (writer and editor) but not owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:4
            relation: editor
            user: user:duck
          - object: document:5
            relation: owner
            user: user:eagle
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: false
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: false
          - tuple:
              object: document:5
              relation: viewer
              user: user:eagle
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:eagle
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:4
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:5
              relation: viewer
            expectation:
  - name: exclusion_and_intersection_in_subtract
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer but not (editor and owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
          - object: document:4
            relation: writer
            user: user:duck
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: true
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
          - tuple:
              object: document:4
              relation: viewer
              user: user:duck
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
          - request:
              user: user:duck
              type: document
              relation: viewer
            expectation:
              - document:4
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:badger
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
              - user:cheetah
          - request:
              filters:
                - user
              object: document:4
              relation: viewer
            expectation:
              - user:duck
  - name: exclusion_and_exclusion_in_base
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: (writer but not editor) but not owner
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: owner
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
              - user:cheetah
  - name: exclusion_and_exclusion_in_subtract
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define writer: [user]
              define editor: [user]
              define owner: [user]
              define viewer: writer but not (editor but not owner)
        tuples:
          - object: document:1
            relation: writer
            user: user:aardvark
          - object: document:1
            relation: editor
            user: user:aardvark
          - object: document:1
            relation: owner
            user: user:aardvark
          - object: document:2
            relation: writer
            user: user:badger
          - object: document:2
            relation: editor
            user: user:badger
          - object: document:3
            relation: writer
            user: user:cheetah
          - object: document:3
            relation: owner
            user: user:cheetah
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:2
              relation: viewer
              user: user:badger
            expectation: false
          - tuple:
              object: document:3
              relation: viewer
              user: user:cheetah
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:badger
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:cheetah
              type: document
              relation: viewer
            expectation:
              - document:3
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
              - user:cheetah
  - name: exclusion_between_userset_and_type
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user, group#member] but not blocked
              define blocked: [user, group#member]
        tuples:
          - object: group:1
            relation: blocked
            user: group:1#member
          - object: group:1
            relation: member
            user: user:will
        checkAssertions:
          - tuple:
              object: group:1
              relation: member
              user: user:will
            expectation: false
          - tuple:
              object: group:1
              relation: blocked
              user: group:1#member
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:will
              type: group
              relation: member
            expectation:
          - request:
              user: group:1#member
              type: group
              relation: blocked
            expectation:
             - group:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: group:1
              relation: member
            expectation:
          - request:
              filters:
                - group#member
              object: group:1
              relation: blocked
            expectation:
              - group:1#member
  - name: userset_as_user
    stages:
      - model: |
          model
            schema 1.1
          type user

          type group
            relations
              define member: [user]

          type document
            relations
              define viewer: [group#member]
        tuples:
          - object: document:1
            relation: viewer
            user: group:x#member
          - object: group:x
            relation: member
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: group:x#member
            expectation: true
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: group:x#member
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
          - request:
              filters:
                - group#member
              object: document:1
              relation: viewer
            expectation:
              - group:x#member
  - name: wildcard_direct
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user, user:*]
        tuples:
          - object: document:public
            relation: viewer
            user: user:*
          - object: document:public
            relation: viewer
            user: user:jon
        checkAssertions:
          - tuple:
              object: document:public
              relation: viewer
              user: user:aardvark
            expectation: true
          - tuple:
              object: document:public
              relation: viewer
              user: user:*
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:public
          - request:
              user: user:*
              type: document
              relation: viewer
            expectation:
              - document:public
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:public
              relation: viewer
            expectation:
              - user:*
              - user:jon
  - name: prior_type_restrictions_ignored
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user]
        tuples:
          - object: document:1
            relation: viewer
            user: user:jon
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:jon
      - model: |
          model
            schema 1.1
          type user
          type employee

          type document
            relations
              define viewer: [employee]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
  - name: prior_type_restrictions_ignored_with_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user:*]
        tuples:
          - object: document:1
            relation: viewer
            user: user:*
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:*
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:

  - name: wildcard_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define writer: [user:*]
              define viewer: [user] or writer
        tuples:
          - object: document:public
            relation: writer
            user: user:*
          - object: document:public
            relation: viewer
            user: user:jon
        checkAssertions:
          - tuple:
              object: document:public
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:public
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:public
              relation: viewer
            expectation:
              - user:*
              - user:jon
          - request:
              filters:
                - user
              object: document:public
              relation: writer
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: document:notfound
              relation: writer
            expectation:
  - name: check_with_invalid_tuple_in_store
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: [user]

          type document
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
        tuples:
          - object: folder:x
            relation: viewer
            user: user:aardvark
          - object: document:1
            relation: parent
            user: folder:x
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
  - name: this_with_contextual_tuples
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define viewer: [user]
        tuples:
          - object: document:1
            relation: viewer
            user: user:aardvark
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:aardvark
  - name: wildcard_and_userset_restriction
    stages:
      - model: |
          model
            schema 1.1
          type user
          type user2
          type group
            relations
              define member: [user2]
          type document
            relations
              define viewer: [user:*, group#member]
        tuples:
          - object: document:public
            relation: viewer
            user: user:*
          - object: document:public
            relation: viewer
            user: group:fga#member
          - object: group:fga
            relation: member
            user: user2:bob
        checkAssertions:
          - tuple:
              object: document:public
              relation: viewer
              user: user2:bob
            expectation: true
        listObjectsAssertions:
          - request:
              user: user2:bob
              type: document
              relation: viewer
            expectation:
              - document:public
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:public
              relation: viewer
            expectation:
              - user:*
          - request:
              filters:
                - user2
              object: document:public
              relation: viewer
            expectation:
              - user2:bob
          - request:
              filters:
                - group#member
              object: document:public
              relation: viewer
            expectation:
              - group:fga#member
  - name: wildcard_obeys_the_types_in_stages
    stages:
      - model: |
          model
            schema 1.1
          type user

          type employee

          type document
            relations
              define writer: [employee:*]
              define viewer: [user] or writer
        tuples:
          - object: document:1
            relation: writer
            user: employee:*
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: employee:badger
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: employee:badger
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - employee
              object: document:1
              relation: viewer
            expectation:
              - employee:*
          - request:
              filters:
                - employee
              object: document:1
              relation: writer
            expectation:
              - employee:*
      - model: |
          model
            schema 1.1
          type user

          type employee
          type document
            relations
              define writer: [user:*]
              define viewer: [user] or writer
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            expectation: false
          - tuple:
              object: document:1
              relation: viewer
              user: employee:badger
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            expectation:
          - request:
              user: employee:badger
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - employee
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - employee
              object: document:1
              relation: writer
            expectation:
  - name: validation_relation_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
        checkAssertions:
          - tuple:
              object: user:aardvark
              relation: viewer
              user: user:badger
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: user:badger
              type: user
              relation: viewer
            errorCode: 2022
        listUsersAssertions:
          - request:
              filters:
                - user
              object: user:aardvark
              relation: viewer #non-existent relation on type user
            errorCode: 2022 # ErrorCode_validation_error

  - name: validation_type_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        listObjectsAssertions:
          - request:
              user: user:badger
              type: group #non-existent
              relation: viewer
            errorCode: 2021
        listUsersAssertions:
          - request:
              filters:
                - user
              object: group:fga #non-existent type
              relation: viewer
            errorCode: 2021

  - name: validation_user_type_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: folder:x
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: folder:x
              type: document
              relation: viewer
            errorCode: 2000
        listUsersAssertions:
          - request:
              filters:
                - folder #non-existent type
              object: document:1
              relation: viewer
            errorCode: 2021

  - name: validation_userset_type_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: folder:x#writer
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: folder:x#writer
              type: document
              relation: viewer
            errorCode: 2000
        listUsersAssertions:
          - request:
              filters:
                - folder#writer #non-existent type & relation
              object: document:1
              relation: viewer
            errorCode: 2021
  - name: validation_userset_relation_not_in_model
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: document:x#writer
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: document:x#writer
              type: document
              relation: viewer
            errorCode: 2000
        listUsersAssertions:
          - request:
              filters:
                - document#writer #non-existent relation
              object: document:1
              relation: viewer
            errorCode: 2022 # ErrorCode_validation_error
  - name: validation_user_invalid
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: a:b:c
            errorCode: 2000
        listObjectsAssertions:
          - request:
              user: a:b:c
              type: document
              relation: viewer
            errorCode: 2000

  - name: validation_invalid_object_type_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: folder:x #invalid
                relation: viewer
                user: user:aardvark
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: folder:x #invalid
                relation: viewer
                user: user:aardvark
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            contextualTuples:
              - object: folder:x #invalid
                relation: viewer
                user: user:aardvark
            errorCode: 2027 # ErrorCode_invalid_tuple

  - name: validation_invalid_relation_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: writer #invalid
                user: user:aardvark
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: writer #invalid
                user: user:aardvark
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: writer #invalid
                user: user:aardvark
            errorCode: 2027 # ErrorCode_invalid_tuple

  - name: validation_invalid_user_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: viewer
                user: employee:aardvark #invalid
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: employee:aardvark #invalid
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: employee:aardvark #invalid
            errorCode: 2027 # ErrorCode_invalid_tuple
  - name: validation_invalid_userset_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type document
            relations
              define viewer: [user, group#member]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: viewer
                user: group:fga#undefined #invalid
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: group:fga#undefined #invalid
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: group:fga#undefined #invalid
            errorCode: 2027 # ErrorCode_invalid_tuple
  - name: validation_invalid_wildcard_in_contextual_tuple
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: viewer
                user: user:* #invalid
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: user:* #invalid
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: viewer
                user: user:* #invalid
            errorCode: 2027 # ErrorCode_invalid_tuple
  - name: val_contextual_tuples_and_wildcard_in_ttu_evaluation
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: [user]
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:aardvark
            contextualTuples:
              - object: document:1
                relation: parent
                user: user:* #invalid
            errorCode: 2027
        listObjectsAssertions:
          - request:
              user: user:aardvark
              type: document
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: parent
                user: user:* #invalid
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            contextualTuples:
              - object: document:1
                relation: parent
                user: user:* #invalid
            errorCode: 2027 # ErrorCode_invalid_tuple
  - name: list_objects_considers_input_contextual_tuples
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a
                relation: owner
                object: repo:3
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
              - repo:3
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:2
              relation: owner
            contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
            expectation:
              - user:a
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            contextualTuples:
              - user: user:a
                relation: blocked
                object: repo:1
            expectation:
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a
                relation: owner
                object: repo:3
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
              - repo:3
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            contextualTuples:
              - user: user:aardvark
                relation: owner
                object: repo:1
            expectation:
              - user:a
              - user:aardvark
  - name: ignores_irrelevant_contextual_tuples_because_different_user
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:b #different user
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2 #different repo
            expectation:
              - user:a
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type team
            relations
              define member: [user]
          type repo
            relations
              define owner: [user, team#member]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:b #different user
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
  - name: ignores_irrelevant_contextual_tuples_because_different_type
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
          type organization
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type, should be ignored
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type, should be ignored
            expectation:
              - user:a
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
          type organization
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type, should be ignored
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            contextualTuples:
              - user: user:a
                relation: owner
                object: organization:1 #different type than filter, should be ignored
            expectation:
              - user:a
  - name: list_objects_ignores_irrelevant_tuples_because_different_user
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
          - user: user:aa #same prefix, but different user
            relation: owner
            object: repo:2
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            expectation:
              - user:a
          - request:
              filters:
                - user
              object: repo:2
              relation: owner
            expectation:
              - user:aa
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            expectation:
              - user:a
  - name: list_objects_ignores_duplicate_contextual_tuples
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a #same as above
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:2
              relation: owner
            contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a #same as above
                relation: owner
                object: repo:2
            expectation:
              - user:a
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a # same as above
                relation: owner
                object: repo:2
            request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
              - repo:2
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:2
              relation: owner
            contextualTuples:
              - user: user:a
                relation: owner
                object: repo:2
              - user: user:a # same as above
                relation: owner
                object: repo:2
            expectation:
              - user:a
  - name: error_if_contextual_tuples_do_not_follow_type_restrictions
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
          type organization
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        tuples:
          - user: user:a
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - contextualTuples:
              - user: user:* #not allowed
                relation: owner
                object: organization:1
            request:
              user: user:a
              type: repo
              relation: owner
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            contextualTuples:
              - user: user:* #not allowed
                relation: owner
                object: organization:1
            errorCode: 2027 # ErrorCode_invalid_tuple
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
          type organization
            relations
              define owner: [user]
        listObjectsAssertions:
          - contextualTuples:
              - user: user:* #not allowed
                relation: owner
                object: organization:1
            request:
              user: user:a
              type: repo
              relation: owner
            errorCode: 2027
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: owner
            contextualTuples:
              - user: user:* #not allowed
                relation: owner
                object: organization:1
            errorCode: 2027 # ErrorCode_invalid_tuple
  - name: list_objects_error_if_unknown_type_in_request
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        listObjectsAssertions:
          - request:
              user: user:a
              type: unknown
              relation: owner
            errorCode: 2021 # type 'unknown' not found
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - request:
              user: user:a
              type: unknown
              relation: owner
            errorCode: 2021 # type 'unknown' not found
  - name: list_objects_error_if_unknown_relation_in_request
    stages:
      - model: | # concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user] but not blocked
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: unknown
            errorCode: 2022 # relation 'unknown' not found
      - model: | # reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user]
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: unknown
            errorCode: 2022 # relation 'unknown' not found
  - name: relations_not_defined_in_some_child_type_falsy
    # even if there are no truthy paths available we should not error.
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder1
          type folder2
            relations
              define viewer: [user]
          type document
            relations
              define viewer: viewer from parent
              define parent: [folder1,folder2]
        tuples:
          - user: folder1:x
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:d
              relation: viewer
            expectation:
  - name: ttu_some_parent_type_removed
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder1
            relations
              define viewer: [user]
          type folder2
            relations
              define viewer: [user]
          type document
            relations
              define viewer: viewer from parent
              define parent: [folder1,folder2]
        tuples:
          - user: folder1:x
            relation: parent
            object: document:d
          - user: user:anne
            relation: viewer
            object: folder1:x
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:d
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:d
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:d
              relation: viewer
            expectation:
              - user:anne
      - model: |
          model
            schema 1.1
          type user
          type folder1
          type folder2
            relations
              define viewer: [user]
          type document
            relations
              define viewer: viewer from parent
              define parent: [folder1,folder2]
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:d
              relation: viewer
            expectation:
  - name: relations_not_defined_in_some_child_type_truthy
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder1
          type folder2
            relations
              define viewer: [user]
          type document
            relations
              define viewer: viewer from parent
              define parent: [folder1,folder2]
        tuples:
          - user: folder2:x
            relation: parent
            object: document:d
          - user: user:anne
            relation: viewer
            object: folder2:x
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:d
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:d
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:d
              relation: viewer
            expectation:
              - user:anne
  # https://github.com/openfga/openfga/issues/576
  - name: same_relation_name_different_type
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user]
              define viewer: [user, user:*] or owner
          type document
            relations
              define can_read: viewer from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              #document:d is not expected
              - document:c
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:c
              relation: can_read
            expectation:
              - user:anne
  - name: computed_user_indirect_ref
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user]
        tuples:
          - user: user:anne
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:c
              relation: can_read
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
  - name: computed_user_indirect_ref_extra_indirection
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [folder]
              define viewer: [user] or owner or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:c
              relation: can_read
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
  - name: three_prong_relation
    stages:
      - model: |
          model
            schema 1.1
          type user
          type module
            relations
              define owner: [user] or owner from parent
              define parent: [document, module]
              define viewer: [user] or owner or viewer from parent
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [module, folder]
              define viewer: [user] or owner or viewer from parent
          type document
            relations
              define owner: [user] or owner from parent
              define parent: [folder, document]
              define viewer: [user] or owner or viewer from parent
        tuples:
          - user: user:anne
            relation: owner
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:a
          - user: document:a
            relation: parent
            object: module:b
          - user: module:b
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: module:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: module:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:b
          - request:
              user: user:anne
              type: module
              relation: viewer
            expectation:
              - module:a
              - module:b
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:b
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: module:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: module:b
              relation: viewer
            expectation:
              - user:anne
  - name: three_prong_relation_loop
    stages:
      - model: |
          model
            schema 1.1
          type user
          type module
            relations
              define owner: [user] or owner from parent
              define parent: [document, module]
              define viewer: [user] or owner or viewer from parent
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [module, folder]
              define viewer: [user] or owner or viewer from parent
          type document
            relations
              define owner: [user] or owner from parent
              define parent: [folder, document]
              define viewer: [user] or owner or viewer from parent
        tuples:
          - user: user:anne
            relation: owner
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:a
          - user: document:a
            relation: parent
            object: module:b
          - user: module:b
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:b
          - user: document:b
            relation: parent
            object: module:a
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: module:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: module:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:b
          - request:
              user: user:anne
              type: module
              relation: viewer
            expectation:
              - module:a
              - module:b
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:b
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: module:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: module:b
              relation: viewer
            expectation:
              - user:anne
  - name: three_prong_relation_possible_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user
          type module
            relations
              define owner: [user] or has_owned from parent
              define parent: [document, module]
              define has_owned: owner
              define viewer: [user] or has_owned or viewer from parent
          type folder
            relations
              define owner: [user] or has_owned from parent
              define parent: [module, folder]
              define has_owned: owner
              define viewer: [user] or has_owned or viewer from parent
          type document
            relations
              define banned: [user]
              define owner: [user] or has_owned from parent
              define has_owned: owner but not banned
              define parent: [folder, document]
              define viewer: [user] or has_owned or viewer from parent
        tuples:
          - user: user:anne
            relation: owner
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:a
          - user: document:a
            relation: parent
            object: module:b
          - user: module:b
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: module:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: module:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:b
          - request:
              user: user:anne
              type: module
              relation: viewer
            expectation:
              - module:a
              - module:b
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:b
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: module:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: module:b
              relation: viewer
            expectation:
              - user:anne
  - name: computed_user_multi_route
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user] or owner from parent
              define can_modify: owner
              define parent: [folder]
              define viewer: [user] or can_modify or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent or can_modify from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:c
              relation: can_read
            expectation:
              - user:anne
  - name: computed_user_indirect_ref_same_rel_name
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user] or owner from parent
              define parent: [folder]
              define viewer: [user] or owner or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_view: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:anne
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: document:d
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_view
            expectation:
              - document:c
              - document:d
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:c
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:d
              relation: can_view
            expectation:
              - user:anne
  - name: computed_user_indirect_ref_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user, user:*] or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:*
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: document:c
              relation: can_read
            expectation:
              - user:*
  - name: computed_user_indirect_ref_extra_indirection_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define owner: [user, user:*] or owner from parent
              define parent: [folder]
              define viewer: [user, user:*] or owner or viewer from parent
              define can_view: viewer
          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user, user:*]
        tuples:
          - user: user:*
            relation: owner
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:c
              relation: can_read
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:*
  - name: two_level_computed_user_indirect_ref
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define viewer: [user] or viewer from parent
              define can_look: viewer
              define can_view: can_look

          type document
            relations
              define can_read: can_view from parent
              define parent: [document, folder]
              define viewer: [user]
        tuples:
          - user: user:anne
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:b
            relation: parent
            object: document:c
          - user: document:c
            relation: parent
            object: document:d
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:c
            expectation: true
          - tuple:
              user: user:anne
              relation: can_read
              object: document:d
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: can_read
            expectation:
              - document:c
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:c
              relation: can_read
            expectation:
              - user:anne
  - name: ttu_multiple_tupleset_types
    stages:
      - model: |
          model
            schema 1.1
          type user
          type employee

          type group
            relations
              define can_view: [employee]

          type folder
            relations
              define can_view: [user]

          type document
            relations
              define parent: [employee,group,folder]
              define viewer: can_view from parent
        tuples:
          - user: employee:1
            relation: can_view
            object: group:1
          - user: group:1
            relation: parent
            object: document:1
          - user: user:1
            relation: can_view
            object: folder:1
          - user: folder:1
            relation: parent
            object: document:1
        checkAssertions:
          - tuple:
              user: employee:1
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:1
              relation: viewer
              object: document:1
            expectation: true
  - name: ttu_and_computed_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: owner
              define owner: [user]

          type document
            relations
              define parent: [folder]
              define can_view: viewer from parent
        tuples:
          - user: folder:1
            relation: parent
            object: document:1
          - user: user:jose
            relation: owner
            object: folder:1
        checkAssertions:
          - tuple:
              user: user:jose
              relation: can_view
              object: document:1
            expectation: true
  - name: ttu_and_computed_ttu_with_union
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type folder
            relations
              define can_view: viewer or can_view from parent
              define parent: [folder]
              define viewer: [group#member]
          type document
            relations
              define parent: [folder]
              define viewer: can_view from parent
        tuples:
          - user: user:anne
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:a
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:b
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:b
              relation: viewer
            expectation:
              - user:anne
  - name: simple_userset_child_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
              define member_c1: member
              define member_c2: member_c1
              define member_c3: member_c2
              define member_c4: member_c3
          type folder
            relations
              define viewer: [group#member_c4]
        tuples:
          - user: user:anne
            relation: member
            object: group:fga
          - user: group:fga#member_c4
            relation: viewer
            object: folder:1
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:2
            expectation: false
          - tuple:
              user: user:foo
              relation: viewer
              object: folder:1
            expectation: false
          - tuple:
              user: group:fga#member
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: group:fga#member_c4
              relation: viewer
              object: folder:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:1
          - request:
              user: group:fga#member
              type: folder
              relation: viewer
            expectation:
              - folder:1
          - request:
              user: group:fga#member_c4
              type: folder
              relation: viewer
            expectation:
              - folder:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:1
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - group#member
              object: folder:1
              relation: viewer
            expectation:
              - group:fga#member
          - request:
              filters:
                - group#member_c4
              object: folder:1
              relation: viewer
            expectation:
              - group:fga#member_c4
  - name: simple_userset_child_wildcard_only
    stages:
      - model: |
          model
            schema 1.1
          type user
          type user2
          type group
            relations
              define member: [user:*, user2:*]
          type folder
            relations
              define viewer: [group#member]
        tuples:
          - user: user:*
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: folder:1
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:2
            expectation: false
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:1
            expectation: false
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:1
          - request:
              user: user2:foo
              type: folder
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:1
              relation: viewer
            expectation:
              - user:*
          - request:
              filters:
                - user2
              object: folder:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user2
              object: folder:2
              relation: viewer
            expectation:
  - name: simple_userset_child_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type user2
          type group
            relations
              define member: [user, user:*, user2, user2:*]
          type folder
            relations
              define viewer: [group#member]
        tuples:
          - user: user:*
            relation: member
            object: group:fga
          - user: user:maria
            relation: member
            object: group:engineering
          - user: group:fga#member
            relation: viewer
            object: folder:1
          - user: group:engineering#member
            relation: viewer
            object: folder:2
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:2
            expectation: false
          - tuple:
              user: user:maria
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: user:maria
              relation: viewer
              object: folder:2
            expectation: true
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:1
            expectation: false
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:1
          - request:
              user: user:maria
              type: folder
              relation: viewer
            expectation:
              - folder:1
              - folder:2
          - request:
              user: user2:foo
              type: folder
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:1
              relation: viewer
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: folder:2
              relation: viewer
            expectation:
              - user:maria
          - request:
              filters:
                - user2
              object: folder:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user2
              object: folder:2
              relation: viewer
            expectation:
  - name: simple_ttu_child_wildcard_only
    stages:
      - model: |
          model
            schema 1.1
          type user
          type user2
          type group
            relations
              define member: [user:*, user2:*]
          type folder
            relations
              define viewer: member from owner
              define owner: [group]
        tuples:
          - user: user:*
            relation: member
            object: group:fga
          - user: group:fga
            relation: owner
            object: folder:1
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:2
            expectation: false
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:1
            expectation: false
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:1
          - request:
              user: user2:foo
              type: folder
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:1
              relation: viewer
            expectation:
              - user:*
          - request:
              filters:
                - user2
              object: folder:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user2
              object: folder:2
              relation: viewer
            expectation:
  - name: simple_ttu_child_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type user2
          type group
            relations
              define member: [user, user:*, user2, user2:*]
          type folder
            relations
              define viewer: member from owner
              define owner: [group]
        tuples:
          - user: user:*
            relation: member
            object: group:fga
          - user: user:maria
            relation: member
            object: group:engineering
          - user: group:fga
            relation: owner
            object: folder:1
          - user: group:engineering
            relation: owner
            object: folder:2
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:2
            expectation: false
          - tuple:
              user: user:maria
              relation: viewer
              object: folder:1
            expectation: true
          - tuple:
              user: user:maria
              relation: viewer
              object: folder:2
            expectation: true
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:1
            expectation: false
          - tuple:
              user: user2:foo
              relation: viewer
              object: folder:2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: viewer
            expectation:
              - folder:1
          - request:
              user: user:maria
              type: folder
              relation: viewer
            expectation:
              - folder:1
              - folder:2
          - request:
              user: user2:foo
              type: folder
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:1
              relation: viewer
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: folder:2
              relation: viewer
            expectation:
              - user:maria
          - request:
              filters:
                - user2
              object: folder:1
              relation: viewer
            expectation:
          - request:
              filters:
                - user2
              object: folder:2
              relation: viewer
            expectation:
  - name: ttu_and_computed_ttu_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user, user:*]
          type folder
            relations
              define can_view: viewer or can_view from parent
              define parent: [folder]
              define viewer: [group#member]
          type document
            relations
              define parent: [folder]
              define viewer: can_view from parent
        tuples:
          - user: user:*
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:a
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:b
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:*
          - request:
              filters:
                - group#member
              object: folder:a
              relation: can_view
            expectation:
              - group:fga#member
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: document:b
              relation: viewer
            expectation:
              - user:*
  - name: ttu_ttu_and_computed_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type module
            relations
              define can_view: viewer or can_view from parent
              define parent: [module]
              define viewer: [group#member]
          type folder
            relations
              define parent: [module, folder]
              define can_view: can_view from parent
          type document
            relations
              define parent: [folder]
              define viewer: can_view from parent
        tuples:
          - user: user:anne
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: module:a
          - user: module:a
            relation: parent
            object: folder:a
          - user: folder:a
            relation: parent
            object: folder:b
          - user: folder:a
            relation: parent
            object: document:b
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: folder:b
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:b
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: folder
              relation: can_view
            expectation:
              - folder:a
              - folder:b
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:b
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: folder:b
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - group#member
              object: folder:a
              relation: can_view
            expectation:
              - group:fga#member
  - name: contextual_tuple_ref_relation_disjoint
    stages:
      - model: |
          model
            schema 1.1
          type user
          type company
            relations
              define admin: [user]
              define management: [user]
              define employee: [user] or admin
          type group
            relations
              define corp: [company]
              define member: employee from corp
          type document
            relations
              define viewer: [group#member]
          type diagram
            relations
              define parent: [document]
              define viewer: viewer from parent
        tuples:
          - object: company:abc
            relation: management
            user: user:anne
          - object: group:fga
            relation: corp
            user: company:abc
          - object: document:a
            relation: viewer
            user: group:fga#member
          - object: diagram:a
            relation: parent
            user: document:a
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: false
          - tuple:
              user: user:anne
              relation: viewer
              object: diagram:a
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:anne
              type: diagram
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: diagram:a
              relation: viewer
            expectation:
          - request:
              filters:
                - group#member
              object: diagram:a
              relation: viewer
            expectation:
              - group:fga#member
  - name: reverse_expand_relation_not_match
    stages:
      - model: |
          model
            schema 1.1
          type user
          type company
            relations
              define admin: [user]
              define management: [user]
              define employee: [user] or admin
          type group
            relations
              define observer: [company]
              define owner: [company]
              define admin: admin from owner
              define member: employee from owner
          type document
            relations
              define owner: [group]
              define viewer: member from owner or observer from owner
        tuples:
          - object: company:abc
            relation: employee
            user: user:anne
          - object: document:a
            relation: owner
            user: group:fga
          - object: group:fga
            relation: observer
            user: company:abc
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:a
              relation: viewer
            expectation:
          - request:
              filters:
                - group#member
              object: document:a
              relation: viewer
            expectation:
              - group:fga#member
          - request:
              filters:
                - group#member
              object: document:b
              relation: viewer
            expectation:
  - name: exclusion_for_some_relations
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type folder
            relations
              define owner: [group]
              define viewer: member from owner
          type document
            relations
              define banned: [user]
              define owner: [folder]
              define viewer: viewer from owner
              define can_view: viewer but not banned
              define can_see: can_view
        tuples:
          - user: user:anne
            relation: member
            object: group:fga
          - user: group:fga
            relation: owner
            object: folder:a
          - user: folder:a
            relation: owner
            object: document:a
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_view
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: can_see
              object: document:a
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
          - request:
              user: user:anne
              type: document
              relation: can_view
            expectation:
              - document:a
          - request:
              user: user:anne
              type: document
              relation: can_see
            expectation:
              - document:a
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:a
              relation: viewer
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:a
              relation: can_see
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - user
              object: document:a
              relation: can_view
            expectation:
              - user:anne
          - request:
              filters:
                - document#can_view
              object: document:a
              relation: can_see
            expectation:
              - document:a#can_view
          - request:
              filters:
                - document#viewer
              object: document:a
              relation: can_see
            expectation:
             - document:a#viewer
  - name: evaluate_userset_in_computed_relation_of_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [organization]
              define reader: repo_admin from owner
          type organization
            relations
              define member: [user]
              define repo_admin: [organization#member]
        tuples:
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:openfga#member
            relation: repo_admin
            object: organization:openfga
          - user: user:erik
            relation: member
            object: organization:openfga
        checkAssertions:
          - tuple:
              user: user:erik
              relation: reader
              object: repo:openfga/openfga
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:erik
              type: repo
              relation: reader
            expectation:
              - repo:openfga/openfga
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:openfga/openfga
              relation: reader
            expectation:
              - user:erik
          - request:
              filters:
                - organization#member
              object: repo:openfga/openfga
              relation: reader
            expectation:
              - organization:openfga#member
          - request:
              filters:
                - organization#member
              object: repo:unknown
              relation: reader
            expectation:
  - name: nested_ttu_involving_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user
          type organization
            relations
              define member: [user]
              define viewer: [user] and member
          type folder
            relations
              define parent: [organization]
              define viewer: viewer from parent
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
              define can_view: viewer
        tuples:
          - user: user:jon
            relation: member
            object: organization:openfga
          - user: user:jon
            relation: viewer
            object: organization:openfga
          - user: organization:openfga
            relation: parent
            object: folder:X
          - user: folder:X
            relation: parent
            object: document:1
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:jon
          - request:
              filters:
                - user
              object: document:1
              relation: can_view
            expectation:
              - user:jon
          - request:
              filters:
                - organization
              object: document:1
              relation: can_view
            expectation:
          - request:
              filters:
                - folder
              object: document:1
              relation: can_view
            expectation:
  - name: nested_ttu_involving_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user
          type organization
            relations
              define restricted: [user]
              define viewer: [user] but not restricted
          type folder
            relations
              define parent: [organization]
              define viewer: viewer from parent
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
              define can_view: viewer
        tuples:
          - user: user:bob
            relation: restricted
            object: organization:openfga
          - user: user:jon
            relation: viewer
            object: organization:openfga
          - user: organization:openfga
            relation: parent
            object: folder:X
          - user: folder:X
            relation: parent
            object: document:1
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: false
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: can_view
              object: document:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: can_view
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: can_view
            expectation:
              - user:jon
          - request:
              filters:
                - folder#viewer
              object: document:1
              relation: can_view
            expectation:
              - folder:X#viewer
          - request:
              filters:
                - organization#viewer
              object: document:1
              relation: can_view
            expectation:
              - organization:openfga#viewer
  - name: userset_with_intersection_in_computed_relation_of_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [organization]
              define allowed: [user]
              define reader: repo_admin from owner and allowed
              define can_read: reader
          type organization
            relations
              define member: [user]
              define repo_admin: [organization#member]
        tuples:
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:openfga#member
            relation: repo_admin
            object: organization:openfga
          - user: user:erik
            relation: member
            object: organization:openfga
          - user: user:jim
            relation: member
            object: organization:openfga
          - user: user:erik
            relation: allowed
            object: repo:openfga/openfga
        checkAssertions:
          - tuple:
              user: user:erik
              relation: reader
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: reader
              object: repo:openfga/openfga
            expectation: false
          - tuple:
              user: user:erik
              relation: can_read
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: can_read
              object: repo:openfga/openfga
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:erik
              type: repo
              relation: reader
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: reader
            expectation:
          - request:
              user: user:erik
              type: repo
              relation: can_read
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: can_read
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:openfga/openfga
              relation: can_read
            expectation:
              - user:erik
          - request:
              filters:
                - user
              object: repo:openfga/openfga
              relation: reader
            expectation:
              - user:erik
          - request:
              filters:
                - organization#member
              object: repo:openfga/openfga
              relation: reader
            expectation:
          - request:
              filters:
                - organization#member
              object: repo:openfga/openfga
              relation: can_read
            expectation:
          - request:
              filters:
                - repo#allowed
              object: repo:openfga/openfga
              relation: can_read
            expectation:
  - name: userset_with_exclusion_in_computed_relation_of_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [organization]
              define restricted: [user]
              define reader: repo_admin from owner but not restricted
              define can_read: reader
          type organization
            relations
              define member: [user]
              define repo_admin: [organization#member]
        tuples:
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:openfga#member
            relation: repo_admin
            object: organization:openfga
          - user: user:erik
            relation: member
            object: organization:openfga
          - user: user:jim
            relation: member
            object: organization:openfga
          - user: user:jim
            relation: restricted
            object: repo:openfga/openfga
        checkAssertions:
          - tuple:
              user: user:erik
              relation: reader
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: reader
              object: repo:openfga/openfga
            expectation: false
          - tuple:
              user: user:erik
              relation: can_read
              object: repo:openfga/openfga
            expectation: true
          - tuple:
              user: user:jim
              relation: can_read
              object: repo:openfga/openfga
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:erik
              type: repo
              relation: reader
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: reader
            expectation:
          - request:
              user: user:erik
              type: repo
              relation: can_read
            expectation:
              - repo:openfga/openfga
          - request:
              user: user:jim
              type: repo
              relation: can_read
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:openfga/openfga
              relation: can_read
            expectation:
              - user:erik
          - request:
              filters:
                - user
              object: repo:openfga/openfga
              relation: reader
            expectation:
              - user:erik
          - request:
              filters:
                - repo#restricted
              object: repo:openfga/openfga
              relation: can_read
            expectation:
  - name: relation_with_wildcard_involving_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define allowed: [user]
              define viewer: [user:*] and allowed
              define can_view: viewer
        tuples:
          - user: user:jon
            relation: allowed
            object: document:1
          - user: user:*
            relation: viewer
            object: document:1
          - user: user:*
            relation: viewer
            object: document:2
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:2
            expectation: false
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: can_view
              object: document:2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: can_view
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: can_view
            expectation:
              - user:jon
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:jon
          - request:
              filters:
                - document#allowed
              object: document:1
              relation: can_view
            expectation:
  - name: relation_with_wildcard_involving_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define restricted: [user]
              define viewer: [user:*] but not restricted
              define can_view: viewer
        tuples:
          - user: user:bob
            relation: restricted
            object: document:1
          - user: user:*
            relation: viewer
            object: document:1
          - user: user:*
            relation: viewer
            object: document:2
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: false
          - tuple:
              user: user:bob
              relation: viewer
              object: document:2
            expectation: true
          - tuple:
              user: user:jon
              relation: can_view
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: can_view
              object: document:1
            expectation: false
          - tuple:
              user: user:bob
              relation: can_view
              object: document:2
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
              - document:2
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
              - document:2
          - request:
              user: user:jon
              type: document
              relation: can_view
            expectation:
              - document:1
              - document:2
          - request:
              user: user:bob
              type: document
              relation: can_view
            expectation:
              - document:2
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: can_view
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: document:2
              relation: can_view
            expectation:
              - user:*
  - name: relation_with_userset_involving_exclusion
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type document
            relations
              define restricted: [user]
              define viewer: [group#member] but not restricted
              define can_view: viewer
        tuples:
          - user: user:maria
            relation: member
            object: group:fga
          - user: user:will
            relation: member
            object: group:fga
          - user: group:fga#member
            relation: viewer
            object: document:1
          - user: user:will
            relation: restricted
            object: document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: can_view
            expectation:
              - user:maria
          - request:
              filters:
                - group#member
              object: document:1
              relation: can_view
            expectation:
              - group:fga#member
  - name: list_objects_does_not_return_duplicates
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define admin: [user, user:*] but not blocked
        tuples:
          - user: user:a
            relation: admin
            object: repo:1
          - user: user:* #tuple grants access to the same as above
            relation: admin
            object: repo:1
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: admin
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: admin
            expectation:
              - user:a
              - user:*
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define admin: [user, user:*]
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: admin
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: admin
            expectation:
              - user:a
              - user:*
  - name: list_objects_expands_wildcard_tuple
    stages:
      - model: | #concurrent checks
          model
            schema 1.1
          type user
          type repo
            relations
              define blocked: [user]
              define owner: [user, user:*] but not blocked
              define can_own: owner
        tuples:
          - user: user:*
            relation: owner
            object: repo:1
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
          - request:
              user: user:a
              type: repo
              relation: can_own
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: can_own
            expectation:
              - user:*
      - model: | #reverse expansion
          model
            schema 1.1
          type user
          type repo
            relations
              define owner: [user, user:*]
              define can_own: owner
        listObjectsAssertions:
          - request:
              user: user:a
              type: repo
              relation: owner
            expectation:
              - repo:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:1
              relation: can_own
            expectation:
              - user:*
      - model: | #complex model
          model
            schema 1.1
          type user
          type folder
            relations
              define parent: [folder]
              define owner: [group]
              define folder_reader: [user, group#member] or folder_reader from owner or folder_reader from parent
              define blocked: [user, user:*, group#member] or nblocked from parent
              define unblocked: [user, group#member]
              define nblocked: blocked but not unblocked
              define allowed: [user, user:*, group#member] or allowed from parent
              define super_allowed: [user, group#member] or super_allowed from parent
              define reader: folder_reader and allowed and super_allowed
              define can_read: reader but not nblocked
          type group
            relations
              define parent: [group]
              define allowed: [user, group#member] or allowed from parent
              define super_allowed: [user, group#super_allowed]
              define blocked: [user, group#member] or blocked from parent
              define og_member: [user] or member from parent
              define allowed_member: og_member and allowed and super_allowed
              define member: allowed_member but not blocked
              define folder_reader: [group#member] or folder_reader from parent
        tuples:
          - user: user:anne
            relation: og_member
            object: group:marketing
          - user: user:anne
            relation: allowed
            object: group:marketing
          - user: user:anne
            relation: super_allowed
            object: group:marketing
          - user: user:beth
            relation: og_member
            object: group:marketing
          - user: user:beth
            relation: allowed
            object: group:marketing
          - user: user:beth
            relation: super_allowed
            object: group:marketing
          - user: user:carl
            relation: og_member
            object: group:marketing
          - user: user:carl
            relation: allowed
            object: group:marketing
          - user: user:dan
            relation: og_member
            object: group:marketing
          - user: user:dan
            relation: allowed
            object: group:marketing
          - user: user:dan
            relation: super_allowed
            object: group:marketing
          - user: user:dan
            relation: blocked
            object: group:marketing
          - user: user:emily
            relation: og_member
            object: group:marketing
          - user: user:emily
            relation: allowed
            object: group:marketing
          - user: user:emily
            relation: super_allowed
            object: group:marketing
          - user: user:gabriel
            relation: og_member
            object: group:marketing
          - user: user:gabriel
            relation: allowed
            object: group:marketing
          - user: user:gabriel
            relation: super_allowed
            object: group:marketing
          - user: user:harriette
            relation: og_member
            object: group:marketing
          - user: user:harriette
            relation: allowed
            object: group:marketing
          - user: user:harriette
            relation: super_allowed
            object: group:marketing
          - user: user:gabriel
            relation: og_member
            object: group:admin
          - user: user:gabriel
            relation: allowed
            object: group:admin
          - user: user:gabriel
            relation: super_allowed
            object: group:admin
          - user: group:marketing#member
            relation: folder_reader
            object: group:marketing
          - user: group:marketing
            relation: parent
            object: group:digitalmktg
          - user: group:marketing#super_allowed
            relation: super_allowed
            object: group:digitalmktg
          - user: group:digitalmktg
            relation: owner
            object: folder:1
          - user: folder:1
            relation: parent
            object: folder:2
          - user: folder:2
            relation: parent
            object: folder:3
          - user: folder:3
            relation: parent
            object: folder:4
          - user: folder:4
            relation: parent
            object: folder:5
          - user: group:marketing#member
            relation: allowed
            object: folder:1
          - user: group:marketing#member
            relation: super_allowed
            object: folder:1
          - user: user:beth
            relation: blocked
            object: folder:2
          - user: user:emily
            relation: blocked
            object: folder:1
          - user: user:emily
            relation: unblocked
            object: folder:2
          - user: user:gabriel
            relation: blocked
            object: folder:1
          - user: user:harriette
            relation: unblocked
            object: folder:5
          - user: user:*
            relation: blocked
            object: folder:4
          - user: user:*
            relation: allowed
            object: folder:4
          - user: group:admin#member
            relation: unblocked
            object: folder:2
        checkAssertions:
          - tuple:
              user: user:anne
              relation: can_read
              object: folder:3
            expectation: True
          - tuple:
              user: user:beth
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:carl
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:dan
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:emily
              relation: can_read
              object: folder:3
            expectation: True
          - tuple:
              user: user:frida
              relation: can_read
              object: folder:3
            expectation: False
          - tuple:
              user: user:gabriel
              relation: can_read
              object: folder:3
            expectation: True
          - tuple:
              user: user:harriette
              relation: can_read
              object: folder:3
            expectation: True
        listObjectsAssertions:
          - request:
              user: user:anne
              relation: can_read
              type: folder
            expectation:
              - folder:1
              - folder:2
              - folder:3
          - request:
              user: user:beth
              relation: can_read
              type: folder
            expectation:
              - folder:1
          - request:
              user: user:carl
              relation: can_read
              type: folder
            expectation: []
          - request:
              user: user:dan
              relation: can_read
              type: folder
            expectation: []
          - request:
              user: user:emily
              relation: can_read
              type: folder
            expectation:
              - folder:2
              - folder:3
          - request:
              user: user:frida
              relation: can_read
              type: folder
            expectation: []
          - request:
              user: user:gabriel
              relation: can_read
              type: folder
            expectation:
              - folder:2
              - folder:3
          - request:
              user: user:harriette
              relation: can_read
              type: folder
            expectation:
              - folder:1
              - folder:2
              - folder:3
              - folder:5
        listUsersAssertions:
          - request:
              filters:
                - user
              object: folder:1
              relation: can_read
            expectation:
              - user:anne
              - user:beth
              - user:harriette
          - request:
              filters:
                - user
              object: folder:2
              relation: can_read
            expectation:
              - user:anne
              - user:emily
              - user:gabriel
              - user:harriette
          - request:
              filters:
                - user
              object: folder:3
              relation: can_read
            expectation:
              - user:anne
              - user:emily
              - user:gabriel
              - user:harriette
          - request:
              filters:
                - user
              object: folder:5
              relation: can_read
            expectation:
              - user:harriette
  - name: resolution_too_complex_throws_error
    stages:
      - model: |
          model
            schema 1.1
          type user
          type resource
            relations
              define a1: [user]
              define a2: [resource#a1]
              define a3: [resource#a2]
              define a4: [resource#a3]
              define a5: [resource#a4]
              define a6: [resource#a5]
              define a7: [resource#a6]
              define a8: [resource#a7]
              define a9: [resource#a8]
              define a10: [resource#a9]
              define a11: [resource#a10]
              define a12: [resource#a11]
              define a13: [resource#a12]
              define a14: [resource#a13]
              define a15: [resource#a14]
              define a16: [resource#a15]
              define a17: [resource#a16]
              define a18: [resource#a17]
              define a19: [resource#a18]
              define a20: [resource#a19]
              define a21: [resource#a20]
              define a22: [resource#a21]
              define a23: [resource#a22]
              define a24: [resource#a23]
              define a25: [resource#a24]
              define a26: [resource#a25]
              define a27: [resource#a26]
              define can_view: a27
        tuples:
          - object: resource:1
            relation: a27
            user: resource:1#a26
          - object: resource:1
            relation: a26
            user: resource:1#a25
          - object: resource:1
            relation: a25
            user: resource:1#a24
          - object: resource:1
            relation: a24
            user: resource:1#a23
          - object: resource:1
            relation: a23
            user: resource:1#a22
          - object: resource:1
            relation: a22
            user: resource:1#a21
          - object: resource:1
            relation: a21
            user: resource:1#a20
          - object: resource:1
            relation: a20
            user: resource:1#a19
          - object: resource:1
            relation: a19
            user: resource:1#a18
          - object: resource:1
            relation: a18
            user: resource:1#a17
          - object: resource:1
            relation: a17
            user: resource:1#a16
          - object: resource:1
            relation: a16
            user: resource:1#a15
          - object: resource:1
            relation: a15
            user: resource:1#a14
          - object: resource:1
            relation: a14
            user: resource:1#a13
          - object: resource:1
            relation: a13
            user: resource:1#a12
          - object: resource:1
            relation: a12
            user: resource:1#a11
          - object: resource:1
            relation: a11
            user: resource:1#a10
          - object: resource:1
            relation: a10
            user: resource:1#a9
          - object: resource:1
            relation: a9
            user: resource:1#a8
          - object: resource:1
            relation: a8
            user: resource:1#a7
          - object: resource:1
            relation: a7
            user: resource:1#a6
          - object: resource:1
            relation: a6
            user: resource:1#a5
          - object: resource:1
            relation: a5
            user: resource:1#a4
          - object: resource:1
            relation: a4
            user: resource:1#a3
          - object: resource:1
            relation: a3
            user: resource:1#a2
          - object: resource:1
            relation: a2
            user: resource:1#a1
          - object: resource:1
            relation: a1
            user: user:maria
        checkAssertions:
          - tuple:
              object: resource:1
              relation: can_view
              user: user:maria
            errorCode: 2002
        listObjectsAssertions:
          - request:
              type: resource
              relation: can_view
              user: user:maria
            errorCode: 2002
        listUsersAssertions:
          - request:
              filters:
                - user
              object: resource:1
              relation: can_view
            errorCode: 2002
  - name: race_condition_same_user_same_object_diff_relation
    stages:
      - model: |
          model
            schema 1.1
          type user
          type test_type
            relations
              define relation1: [user]
              define relation2: [user]
          type list_type
            relations
              define list_relation: [test_type#relation1,test_type#relation2]
        tuples:
          - user: user:test_user
            relation: relation1
            object: test_type:test_type1
          - user: user:test_user
            relation: relation2
            object: test_type:test_type1
          - user: test_type:test_type1#relation1
            relation: list_relation
            object: list_type:list_type1
        checkAssertions:
          - tuple:
              user: user:test_user
              relation: list_relation
              object: list_type:list_type1
            expectation: true
          - tuple:
              user: user:test_user
              relation: list_relation
              object: list_type:list_type2
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:test_user
              type: list_type
              relation: list_relation
            expectation:
              - list_type:list_type1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: list_type:list_type1
              relation: list_relation
            expectation:
              - user:test_user
          - request:
              filters:
                - user
              object: list_type:list_type2
              relation: list_relation
            expectation:
  - name: follows_correct_graph_edges
    stages:
      - model: |
          model
            schema 1.1
          type user

          type repo
            relations
              define admin: [user] or repo_admin from owner
              define owner: [organization]

          type organization
            relations
              define member: [user] or owner
              define owner: [user]
              define repo_admin: [user, organization#member]
        tuples:
          - user: user:alex
            relation: member
            object: organization:openfga
          - user: user:alex
            relation: member
            object: organization:acme
          - user: organization:openfga
            relation: owner
            object: repo:openfga/openfga
          - user: organization:acme
            relation: owner
            object: repo:acme/acme
        listObjectsAssertions:
          - request:
              user: user:alex
              type: repo
              relation: admin
            expectation: []
        listUsersAssertions:
          - request:
              filters:
                - user
              object: repo:openfga/openfga
              relation: admin
            expectation:
          - request:
              filters:
                - user
              object: repo:acme/acme
              relation: admin
            expectation:
  - name: list_objects_with_subcheck_encounters_cycle
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define allowed: [user, document#viewer]
              define viewer: [user, document#allowed] and allowed
        tuples:
          - user: user:jon
            relation: viewer
            object: document:1
          - user: document:1#viewer
            relation: allowed
            object: document:1
          - user: document:1#allowed
            relation: viewer
            object: document:1
        checkAssertions:
          - tuple:
              user: user:jon
              relation: viewer
              object: document:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation: []
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
  - name: direct_relationships_with_intersection
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define allowed: [user]
              define viewer: [user] and allowed
        tuples:
          - user: user:jon
            relation: viewer
            object: document:1
          - user: user:jon
            relation: allowed
            object: document:1
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:jon
  - name: nested_usersets_are_recursively_expanded
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user, group#member]
        tuples:
          - user: group:fga#member
            relation: member
            object: group:eng
          - user: group:fga-backend#member
            relation: member
            object: group:fga
        listUsersAssertions:
          - request:
              filters:
                - group#member
              object: group:eng
              relation: member
            expectation:
              - group:eng#member
              - group:fga#member
              - group:fga-backend#member
  - name: cycle_or_cycle_return_false
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define editor: [user, document#viewer]
              define viewer: [document#editor] or editor
        tuples:
          - user: document:1#viewer
            relation: editor
            object: document:1
          - user: document:1#editor
            relation: viewer
            object: document:1
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: immediate_cycle_through_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define editor: [user, document#viewer]
              define viewer: editor
        tuples:
          - user: document:1#viewer
            relation: editor
            object: document:1
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: immediate_cycle_through_computed_userset
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define editor: [user, document#viewer]
              define viewer: editor
        tuples:
          - user: document:1#viewer
            relation: editor
            object: document:1
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: true_butnot_cycle_return_false
    stages:
      - model: |
          model
            schema 1.1
          type user

          type document
            relations
              define restricted: [user, document#viewer]
              define viewer: [user] but not restricted
        tuples:
          - user: user:jon
            relation: viewer
            object: document:1
          - user: document:1#viewer
            relation: restricted
            object: document:1
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: cycle_and_cycle_return_false
    stages:
      - model: |
          model
            schema 1.1

          type user

          type document
            relations
              define editor: [user, document#viewer]
              define viewer: [user, document#editor] and editor
        tuples:
          - user: document:1#editor
            relation: viewer
            object: document:1
          - user: document:1#viewer
            relation: editor
            object: document:1
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: cycle_and_true_return_false
    stages:
      - model: |
          model
            schema 1.1

          type user

          type document
            relations
              define allowed: [user]
              define viewer: [user, document#viewer] and allowed
        tuples:
          - user: user:jon
            relation: allowed
            object: document:1
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: immediate_cycle_return_false
    stages:
      - model: |
          model
            schema 1.1

          type user

          type document
            relations
              define viewer: [user, document#viewer]
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: cycle_butnot_false_return_false
    stages:
      - model: |
          model
            schema 1.1

          type user

          type document
            relations
              define restricted: [user]
              define viewer: [user, document#viewer] but not restricted
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: false_butnot_cycle_return_false
    stages:
      - model: |
          model
            schema 1.1

          type user

          type document
            relations
              define restricted: [user, document#viewer]
              define viewer: [user] but not restricted
        tuples:
          - user: document:1#viewer
            relation: restricted
            object: document:1
        checkAssertions:
          - tuple:
              object: document:1
              relation: viewer
              user: user:jon
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:jon
              type: document
              relation: viewer
            expectation:
  - name: err_and_err_return_err
    stages:
      - model: |
          model
            schema 1.1
          type user
          type resource
            relations
              define a1: [user]
              define a2: [resource#a1]
              define a3: [resource#a2]
              define a4: [resource#a3]
              define a5: [resource#a4]
              define a6: [resource#a5]
              define a7: [resource#a6]
              define a8: [resource#a7]
              define a9: [resource#a8]
              define a10: [resource#a9]
              define a11: [resource#a10]
              define a12: [resource#a11]
              define a13: [resource#a12]
              define a14: [resource#a13]
              define a15: [resource#a14]
              define a16: [resource#a15]
              define a17: [resource#a16]
              define a18: [resource#a17]
              define a19: [resource#a18]
              define a20: [resource#a19]
              define a21: [resource#a20]
              define a22: [resource#a21]
              define a23: [resource#a22]
              define a24: [resource#a23]
              define a25: [resource#a24]
              define a26: [resource#a25]
              define a27: [resource#a26]
              define can_view: a27
        tuples:
          - object: resource:1
            relation: a27
            user: resource:1#a26
          - object: resource:1
            relation: a26
            user: resource:1#a25
          - object: resource:1
            relation: a25
            user: resource:1#a24
          - object: resource:1
            relation: a24
            user: resource:1#a23
          - object: resource:1
            relation: a23
            user: resource:1#a22
          - object: resource:1
            relation: a22
            user: resource:1#a21
          - object: resource:1
            relation: a21
            user: resource:1#a20
          - object: resource:1
            relation: a20
            user: resource:1#a19
          - object: resource:1
            relation: a19
            user: resource:1#a18
          - object: resource:1
            relation: a18
            user: resource:1#a17
          - object: resource:1
            relation: a17
            user: resource:1#a16
          - object: resource:1
            relation: a16
            user: resource:1#a15
          - object: resource:1
            relation: a15
            user: resource:1#a14
          - object: resource:1
            relation: a14
            user: resource:1#a13
          - object: resource:1
            relation: a13
            user: resource:1#a12
          - object: resource:1
            relation: a12
            user: resource:1#a11
          - object: resource:1
            relation: a11
            user: resource:1#a10
          - object: resource:1
            relation: a10
            user: resource:1#a9
          - object: resource:1
            relation: a9
            user: resource:1#a8
          - object: resource:1
            relation: a8
            user: resource:1#a7
          - object: resource:1
            relation: a7
            user: resource:1#a6
          - object: resource:1
            relation: a6
            user: resource:1#a5
          - object: resource:1
            relation: a5
            user: resource:1#a4
          - object: resource:1
            relation: a4
            user: resource:1#a3
          - object: resource:1
            relation: a3
            user: resource:1#a2
          - object: resource:1
            relation: a2
            user: resource:1#a1
          - object: resource:1
            relation: a1
            user: user:maria
        checkAssertions:
          - tuple:
              object: resource:1
              relation: can_view
              user: user:maria
            errorCode: 2002
        listObjectsAssertions:
          - request:
              type: resource
              relation: can_view
              user: user:maria
            errorCode: 2002
  - name: err_and_true_return_err
    stages:
      - model: |
          model
            schema 1.1
          type user
          type resource
            relations
              define a1: [user]
              define a2: [resource#a1]
              define a3: [resource#a2]
              define a4: [resource#a3]
              define a5: [resource#a4]
              define a6: [resource#a5]
              define a7: [resource#a6]
              define a8: [resource#a7]
              define a9: [resource#a8]
              define a10: [resource#a9]
              define a11: [resource#a10]
              define a12: [resource#a11]
              define a13: [resource#a12]
              define a14: [resource#a13]
              define a15: [resource#a14]
              define a16: [resource#a15]
              define a17: [resource#a16]
              define a18: [resource#a17]
              define a19: [resource#a18]
              define a20: [resource#a19]
              define a21: [resource#a20]
              define a22: [resource#a21]
              define a23: [resource#a22]
              define a24: [resource#a23]
              define a25: [resource#a24]
              define a26: [resource#a25]
              define a27: [resource#a26]
              define can_view: a27
        tuples:
          - object: resource:1
            relation: a27
            user: resource:1#a26
          - object: resource:1
            relation: a26
            user: resource:1#a25
          - object: resource:1
            relation: a25
            user: resource:1#a24
          - object: resource:1
            relation: a24
            user: resource:1#a23
          - object: resource:1
            relation: a23
            user: resource:1#a22
          - object: resource:1
            relation: a22
            user: resource:1#a21
          - object: resource:1
            relation: a21
            user: resource:1#a20
          - object: resource:1
            relation: a20
            user: resource:1#a19
          - object: resource:1
            relation: a19
            user: resource:1#a18
          - object: resource:1
            relation: a18
            user: resource:1#a17
          - object: resource:1
            relation: a17
            user: resource:1#a16
          - object: resource:1
            relation: a16
            user: resource:1#a15
          - object: resource:1
            relation: a15
            user: resource:1#a14
          - object: resource:1
            relation: a14
            user: resource:1#a13
          - object: resource:1
            relation: a13
            user: resource:1#a12
          - object: resource:1
            relation: a12
            user: resource:1#a11
          - object: resource:1
            relation: a11
            user: resource:1#a10
          - object: resource:1
            relation: a10
            user: resource:1#a9
          - object: resource:1
            relation: a9
            user: resource:1#a8
          - object: resource:1
            relation: a8
            user: resource:1#a7
          - object: resource:1
            relation: a7
            user: resource:1#a6
          - object: resource:1
            relation: a6
            user: resource:1#a5
          - object: resource:1
            relation: a5
            user: resource:1#a4
          - object: resource:1
            relation: a4
            user: resource:1#a3
          - object: resource:1
            relation: a3
            user: resource:1#a2
          - object: resource:1
            relation: a2
            user: resource:1#a1
          - object: resource:1
            relation: a1
            user: user:maria
        checkAssertions:
          - tuple:
              object: resource:1
              relation: can_view
              user: user:maria
            errorCode: 2002
        listObjectsAssertions:
          - request:
              type: resource
              relation: can_view
              user: user:maria
            errorCode: 2002
  - name: userset_defines_itself_1
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: [user]
        checkAssertions:
        - tuple:
            user: document:1#viewer
            relation: viewer
            object: document:1
          expectation: true
        - tuple:
            user: document:2#viewer
            relation: viewer
            object: document:1
          expectation: false
        listObjectsAssertions:
          - request:
              user: document:1#viewer
              type: document
              relation: viewer
            expectation: ["document:1"]
        listUsersAssertions:
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: viewer
            expectation:
              - document:1#viewer
  - name: userset_defines_itself_2
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define viewer: editor or writer
              define editor: [user]
              define writer: [user]
        checkAssertions:
        - tuple:
            user: document:1#writer
            relation: viewer
            object: document:1
          expectation: true
        - tuple:
            user: document:1#editor
            relation: viewer
            object: document:1
          expectation: true
        - tuple:
            user: document:1#viewer
            relation: viewer
            object: document:1
          expectation: true
        listObjectsAssertions:
          - request:
              user: document:1#writer
              type: document
              relation: viewer
            expectation: ["document:1"]
          - request:
              user: document:1#editor
              type: document
              relation: viewer
            expectation: ["document:1"]
          - request:
              user: document:1#viewer
              type: document
              relation: viewer
            expectation: ["document:1"]
        listUsersAssertions:
          - request:
              filters:
                - document#writer
              object: document:1
              relation: viewer
            expectation:
              - document:1#writer
          - request:
              filters:
                - document#editor
              object: document:1
              relation: viewer
            expectation:
              - document:1#editor
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: viewer
            expectation:
              - document:1#viewer
  - name: userset_defines_itself_3
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define writer: [user]
              define viewer: writer
        checkAssertions:
        - tuple:
            user: document:1#writer
            relation: viewer
            object: document:1
          expectation: true
        - tuple:
            user: document:1#viewer
            relation: viewer
            object: document:1
          expectation: true
        - tuple:
            user: document:1#viewer
            relation: writer
            object: document:1
          expectation: false
        listObjectsAssertions:
          - request:
              user: document:1#writer
              type: document
              relation: viewer
            expectation: ["document:1"]
          - request:
              user: document:1#viewer
              type: document
              relation: viewer
            expectation: ["document:1"]
          - request:
              user: document:1#viewer
              type: document
              relation: writer
            expectation: []
        listUsersAssertions:
          - request:
              filters:
                - document#writer
              object: document:1
              relation: viewer
            expectation:
              - document:1#writer
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: viewer
            expectation:
              - document:1#viewer
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: writer
            expectation:
  - name: userset_defines_itself_4
    stages:
      - model: |
          model
            schema 1.1
          type user
          type folder
            relations
              define viewer: [user]
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - user: folder:x
            relation: parent
            object: document:1
        checkAssertions:
        - tuple:
            user: folder:x#viewer
            relation: viewer
            object: document:1
          expectation: true
        - tuple:
            user: document:1#viewer
            relation: viewer
            object: document:1
          expectation: true
        listObjectsAssertions:
          - request:
              user: document:1#viewer
              type: document
              relation: viewer
            expectation: ["document:1"]
          - request:
              user: folder:x#viewer
              type: document
              relation: viewer
            expectation: ["document:1"]
        listUsersAssertions:
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: viewer
            expectation:
              - document:1#viewer
          - request:
              filters:
                - folder#viewer
              object: folder:x
              relation: viewer
            expectation:
              - folder:x#viewer
  - name: userset_defines_itself_5
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define allowed: [user]
              define viewer: [user] and allowed
        checkAssertions:
        - tuple:
            user: document:1#viewer
            relation: allowed
            object: document:1
          expectation: false
        - tuple:
            user: document:1#allowed
            relation: viewer
            object: document:1
          expectation: false
        - tuple:
            user: document:1#viewer
            relation: viewer
            object: document:1
          expectation: true
        listObjectsAssertions:
          - request:
              user: document:1#allowed
              type: document
              relation: viewer
            expectation: []
          - request:
              user: document:1#viewer
              type: document
              relation: allowed
            expectation: []
        listUsersAssertions:
          - request:
              filters:
                - document#allowed
              object: document:1
              relation: viewer
            expectation:
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: allowed
            expectation:
  - name: userset_defines_itself_6
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define restricted: [user]
              define viewer: [user] but not restricted
        checkAssertions:
        - tuple:
            user: document:1#viewer
            relation: restricted
            object: document:1
          expectation: false
        - tuple:
            user: document:1#restricted
            relation: viewer
            object: document:1
          expectation: false
        - tuple:
            user: document:1#viewer
            relation: viewer
            object: document:1
          expectation: true
        listObjectsAssertions:
          - request:
              user: document:1#viewer
              type: document
              relation: viewer
            expectation: ["document:1"]
          - request:
              user: document:1#restricted
              type: document
              relation: viewer
            expectation: []
          - request:
              user: document:1#viewer
              type: document
              relation: restricted
            expectation: []
        listUsersAssertions:
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: viewer
            expectation:
            - document:1#viewer
          - request:
              filters:
                - document#viewer
              object: document:1
              relation: restricted
            expectation:
          - request:
              filters:
                - document#restricted
              object: document:1
              relation: viewer
            expectation:
  - name: userset_defines_itself_7
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user, group#member] but not blocked
              define blocked: [user, group#member]
        tuples:
          - user: group:1#member
            relation: blocked
            object: group:1
          - user: user:will
            relation: member
            object: group:1
        checkAssertions:
        - tuple:
            user: group:1#member
            relation: member
            object: group:1
          expectation: true
        listObjectsAssertions:
          - request:
              user: group:1#member
              type: group
              relation: member
            expectation: ["group:1"]
        listUsersAssertions:
          - request:
              filters:
                - group#member
              object: group:1
              relation: member
            expectation:
            - group:1#member
  - name: userset_defines_itself_8
    stages:
      - model: |
          model
            schema 1.1
          type user
          type document
            relations
              define writer: [user]
              define viewer: [user] or writer
        checkAssertions:
        - tuple:
            user: document:1#writer
            relation: viewer
            object: document:1
          expectation: true
        listObjectsAssertions:
          - request:
              user: document:1#writer
              type: document
              relation: viewer
            expectation: ["document:1"]
        listUsersAssertions:
          - request:
              filters:
                - document#writer
              object: document:1
              relation: viewer
            expectation:
            - document:1#writer
  - name: userset_defines_itself_9
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type document
            relations
              define blocked: [user]
              define viewer: [group#member] but not blocked
        tuples:
          - user: group:fga#member
            relation: viewer
            object: document:1
          - user: user:maria
            relation: blocked
            object: document:1
        checkAssertions:
          - tuple:
              user: group:fga#member
              relation: viewer
              object: document:1
            expectation: true # the group as a whole has access, but individual members may not
        listObjectsAssertions:
          - request:
              user: group:fga#member
              type: document
              relation: viewer
            expectation: [document:1]
        listUsersAssertions:
          - request:
              filters:
                - group#member
              object: document:1
              relation: viewer
            expectation:
            - group:fga#member
  - name: userset_defines_itself_10
    stages:
      - model: |
          model
            schema 1.1
          type user
          type doc
            relations
              define d: [user]
              define c: [user]
              define b: c or d
              define a: b
        checkAssertions:
          - tuple:
              user: doc:1#d
              relation: b
              object: doc:1
            expectation: true
          - tuple:
              user: doc:1#c
              relation: b
              object: doc:1
            expectation: true
          - tuple:
              user: doc:1#c
              relation: a
              object: doc:1
            expectation: true
          - tuple:
              user: doc:1#d
              relation: a
              object: doc:1
            expectation: true
          - tuple:
              user: doc:1#b
              relation: a
              object: doc:1
            expectation: true
          - tuple:
              user: doc:1#a
              relation: a
              object: doc:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: doc:1#d
              type: doc
              relation: b
            expectation: [doc:1]
          - request:
              user: doc:1#c
              type: doc
              relation: b
            expectation: [doc:1]
          - request:
              user: doc:1#c
              type: doc
              relation: a
            expectation: [doc:1]
          - request:
              user: doc:1#d
              type: doc
              relation: a
            expectation: [doc:1]
          - request:
              user: doc:1#b
              type: doc
              relation: a
            expectation: [doc:1]
        listUsersAssertions:
          - request:
              filters:
                - doc#d
              object: doc:1
              relation: b
            expectation:
            - doc:1#d
          - request:
              filters:
                - doc#c
              object: doc:1
              relation: b
            expectation:
            - doc:1#c
          - request:
              filters:
                - doc#c
              object: doc:1
              relation: a
            expectation:
            - doc:1#c
          - request:
              filters:
                - doc#d
              object: doc:1
              relation: a
            expectation:
            - doc:1#d
          - request:
              filters:
                - doc#b
              object: doc:1
              relation: a
            expectation:
            - doc:1#b
  - name: ttu_mix_with_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user, user:*]
          type folder
            relations
              define viewer: [user,group#member]
          type document
            relations
              define parent: [folder]
              define viewer: viewer from parent
        tuples:
          - user: user:anne
            relation: member
            object: group:1
          - user: user:anne
            relation: member
            object: group:2
          - user: user:bob
            relation: member
            object: group:2
          - user: user:charlie
            relation: member
            object: group:1
          - user: group:1#member
            relation: viewer
            object: folder:a
          - user: group:2#member
            relation: viewer
            object: folder:a
          - user: user:daemon
            relation: viewer
            object: folder:a
          - user: folder:a
            relation: parent
            object: document:a
          - user: user:elle
            relation: member
            object: group:3
          - user: user:*
            relation: member
            object: group:public
          - user: group:public#member
            relation: viewer
            object: folder:public
          - user: folder:public
            relation: parent
            object: document:public
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: folder:b
            expectation: false
          - tuple:
              user: user:anne
              relation: viewer
              object: document:public
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:public
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:public
            expectation: true
          - tuple:
              user: user:daemon
              relation: viewer
              object: document:a
            expectation: true
          - tuple:
              user: user:daemon
              relation: viewer
              object: document:public
            expectation: true
          - tuple:
              user: user:elle
              relation: viewer
              object: document:a
            expectation: false
          - tuple:
              user: user:elle
              relation: viewer
              object: document:public
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:public
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:public
          - request:
              user: user:charlie
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:public
          - request:
              user: user:daemon
              type: document
              relation: viewer
            expectation:
              - document:a
              - document:public
          - request:
              user: user:elle
              type: document
              relation: viewer
            expectation:
              - document:public
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:a
              relation: viewer
            expectation:
              - user:anne
              - user:bob
              - user:charlie
              - user:daemon
          - request:
              filters:
                - user
              object: folder:a
              relation: viewer
            expectation:
              - user:anne
              - user:bob
              - user:charlie
              - user:daemon
          - request:
              filters:
                - user
              object: document:public
              relation: viewer
            expectation:
              - user:*
  - name: ttu_multiple_parents
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group1
            relations
              define member: [user, user:*]
          type group2
            relations
              define member: [user, user:*]
          type document
            relations
              define parent: [group1, group2]
              define viewer: member from parent
        tuples:
          - user: user:anne
            relation: member
            object: group1:1
          - user: user:anne
            relation: member
            object: group2:1
          - user: user:bob
            relation: member
            object: group1:1
          - user: user:charlie
            relation: member
            object: group2:1
          - user: user:*
            relation: member
            object: group1:pub
          - user: group2:1
            relation: parent
            object: document:1
          - user: group1:1
            relation: parent
            object: document:1
          - user: group1:1
            relation: parent
            object: document:2
          - user: group2:1
            relation: parent
            object: document:3
          - user: group1:pub
            relation: parent
            object: document:pub
          - user: group1:pub
            relation: parent
            object: document:pub1
          - user: group1:1
            relation: parent
            object: document:pub1
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:2
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:3
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:pub1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:2
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:3
            expectation: false
          - tuple:
              user: user:bob
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:pub1
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:2
            expectation: false
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:3
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:pub1
            expectation: true
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:1
            expectation: false
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:2
            expectation: false
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:3
            expectation: false
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:pub1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:1
              - document:2
              - document:3
              - document:pub
              - document:pub1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
              - document:1
              - document:2
              - document:pub
              - document:pub1
          - request:
              user: user:charlie
              type: document
              relation: viewer
            expectation:
              - document:1
              - document:3
              - document:pub
              - document:pub1
          - request:
              user: user:dylan
              type: document
              relation: viewer
            expectation:
              - document:pub
              - document:pub1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:anne
              - user:bob
              - user:charlie
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:anne
              - user:bob
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
              - user:anne
              - user:charlie
          - request:
              filters:
                - user
              object: document:pub
              relation: viewer
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: document:pub1
              relation: viewer
            expectation:
              - user:*
              - user:anne
              - user:bob
      - model: |
          model
            schema 1.1
          type user
          type group1
            relations
              define member: [user, user:*]
          type group2
            relations
              define member: [user, user:*]
          type document
            relations
              # notice we are removing group2
              define parent: [group1]
              define viewer: member from parent
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:2
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:3
            expectation: false
          - tuple:
              user: user:anne
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:anne
              relation: viewer
              object: document:pub1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:2
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:3
            expectation: false
          - tuple:
              user: user:bob
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:pub1
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:1
            expectation: false
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:2
            expectation: false
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:3
            expectation: false
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:charlie
              relation: viewer
              object: document:pub1
            expectation: true
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:1
            expectation: false
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:2
            expectation: false
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:3
            expectation: false
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:pub
            expectation: true
          - tuple:
              user: user:dylan
              relation: viewer
              object: document:pub1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:1
              - document:2
              - document:pub
              - document:pub1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
              - document:1
              - document:2
              - document:pub
              - document:pub1
          - request:
              user: user:charlie
              type: document
              relation: viewer
            expectation:
              - document:pub
              - document:pub1
          - request:
              user: user:dylan
              type: document
              relation: viewer
            expectation:
              - document:pub
              - document:pub1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:anne
              - user:bob
          - request:
              filters:
                - user
              object: document:2
              relation: viewer
            expectation:
              - user:anne
              - user:bob
          - request:
              filters:
                - user
              object: document:3
              relation: viewer
            expectation:
          - request:
              filters:
                - user
              object: document:pub
              relation: viewer
            expectation:
              - user:*
          - request:
              filters:
                - user
              object: document:pub1
              relation: viewer
            expectation:
              - user:*
              - user:anne
              - user:bob
  - name: userset_orphan_parent
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group1
            relations
              define member: [user, user:*]
          type group2
            relations
              define member: [user, user:*]
          type document
            relations
              define viewer: [group1#member, group2#member]
        tuples:
          - user: user:anne
            relation: member
            object: group1:1
          - user: user:bob
            relation: member
            object: group2:1
          - user: group2:1#member
            relation: viewer
            object: document:1
          - user: group1:1#member
            relation: viewer
            object: document:1
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:anne
              - user:bob
      - model: |
          model
            schema 1.1
          type user
          type group1
            relations
              define member: [user, user:*]
          type group2
            relations
              define member: [user, user:*]
          type document
            relations
              # notice we are removing group2
              define viewer: [group1#member]
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:anne
  - name: ttu_remove_public_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user, user:*]
          type document
            relations
              define parent: [group]
              define viewer: member from parent
        tuples:
          - user: user:anne
            relation: member
            object: group:1
          - user: group:1
            relation: parent
            object: document:1
          - user: user:*
            relation: member
            object: group:pub
          - user: group:pub
            relation: parent
            object: document:1
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
              - document:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:anne
              - user:*
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              # notice we are removing user:*
              define member: [user]
          type document
            relations
              define parent: [group]
              define viewer: member from parent
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:anne
  - name: ttu_orphan_public_wildcard_parent
    stages:
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              define member: [user]
          type document
            relations
              define parent: [group, group:*]
        tuples:
          - user: user:anne
            relation: member
            object: group:1
          - user: group:1
            relation: parent
            object: document:1
          - user: group:*
            relation: parent
            object: document:1
      - model: |
          model
            schema 1.1
          type user
          type group
            relations
              # Notice we have removed group:* from parent
              define member: [user]
          type document
            relations
              define parent: [group]
              # Notice we have added viewer
              define viewer: member from parent
        checkAssertions:
          - tuple:
              user: user:anne
              relation: viewer
              object: document:1
            expectation: true
          - tuple:
              user: user:bob
              relation: viewer
              object: document:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:anne
              type: document
              relation: viewer
            expectation:
              - document:1
          - request:
              user: user:bob
              type: document
              relation: viewer
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: document:1
              relation: viewer
            expectation:
              - user:anne
  - name: ttu_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type permission
            relations
              define assignee: assignee from role
              define role: [role]
          type job
            relations
              define can_read: [permission#assignee]
              define cannot_read: [user] but not can_read
        tuples:
          - user: user:1
            relation: assignee
            object: role:admin
          - object: permission:readJobs
            user: role:admin
            relation: role
          - object: job:1
            user: permission:readJobs#assignee
            relation: can_read
          - object: job:1
            user: user:1
            relation: cannot_read
        checkAssertions:
          - tuple:
              user: user:1
              relation: cannot_read
              object: job:1
            expectation: false
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:1
              type: job
              relation: can_read
            expectation:
              - job:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: job:1
              relation: can_read
            expectation:
              - user:1
  - name: ttu_to_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type permission
            relations
              define assignee: assignee from role
              define role: [role]
          type job
            relations
              define permission: [permission]
              define can_read: assignee from permission
              define cannot_read: [user] but not can_read
        tuples:
          - user: user:1
            relation: assignee
            object: role:admin
          - object: permission:readJobs
            user: role:admin
            relation: role
          - object: job:1
            user: permission:readJobs
            relation: permission
          - object: job:1
            user: user:1
            relation: cannot_read
        checkAssertions:
          - tuple:
              user: user:1
              relation: cannot_read
              object: job:1
            expectation: false
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true
        listObjectsAssertions:
          - request:
              user: user:1
              type: job
              relation: can_read
            expectation:
              - job:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: job:1
              relation: can_read
            expectation:
              - user:1
  - name: userset_to_ttu
    stages:
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type permission
            relations
              define assignee: [role#assignee]
          type job
            relations
              define can_read: assignee from permission
              define permission: [permission]
              define cannot_read: [user] but not can_read
        tuples:
          - user: user:1
            relation: assignee
            object: role:admin
          - object: permission:readJobs
            user: role:admin#assignee
            relation: assignee
          - object: job:1
            user: permission:readJobs
            relation: permission
          - user: user:1
            relation: cannot_read
            object: job:1
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true
          - tuple:
              user: user:1
              relation: assignee
              object: permission:readJobs
            expectation: true
          - tuple:
              user: user:1
              relation: cannot_read
              object: job:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:1
              type: job
              relation: can_read
            expectation:
              - job:1
          - request:
              user: user:1
              type: job
              relation: cannot_read
            expectation:
        listUsersAssertions:
          - request:
              filters:
                - user
              object: job:1
              relation: can_read
            expectation:
              - user:1
          - request:
              filters:
                - user
              object: job:1
              relation: cannot_read
            expectation:
  - name: userset_to_userset
    stages:
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type permission
            relations
              define assignee: [role#assignee]
          type job
            relations
              define can_read: [permission#assignee]
              define cannot_read: [user] but not can_read
        tuples:
          - user: user:1
            relation: assignee
            object: role:admin
          - object: permission:readJobs
            user: role:admin#assignee
            relation: assignee
          - object: job:1
            user: permission:readJobs#assignee
            relation: can_read
          - user: user:1
            relation: cannot_read
            object: job:1
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true
          - tuple:
              user: user:1
              relation: assignee
              object: permission:readJobs
            expectation: true
          - tuple:
              user: user:1
              relation: cannot_read
              object: job:1
            expectation: false
        listObjectsAssertions:
          - request:
              user: user:1
              type: job
              relation: can_read
            expectation:
              - job:1
        listUsersAssertions:
          - request:
              filters:
                - user
              object: job:1
              relation: can_read
            expectation:
              - user:1

  - name: ttu_discard_invalid
    stages:
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user, role#assignee]
          type job
            relations
              define parent: [role]
              define can_read: assignee from parent
        tuples:
          - user: user:1
            relation: assignee
            object: role:admin

          - object: role:parent
            user: role:minion#assignee
            relation: assignee
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: false
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type job
            relations
              define parent: [role]
              define can_read: assignee from parent
        tuples:
          - object: job:1
            user: role:admin
            relation: parent
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true

  - name: userset_discard_invalid
    stages:
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define placeholder: [user]
              define assignee: [user, role#placeholder]
          type job
            relations
              define can_read: [role#assignee]
        tuples:
          - user: user:1
            relation: assignee
            object: role:admin

          - object: role:invalid
            user: role:awesome#placeholder
            relation: assignee
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: false
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type job
            relations
              define can_read: [role#assignee]
        tuples:
          - object: job:1
            user: role:admin#assignee
            relation: can_read
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true

  - name: userset_discard_invalid_wildcard
    stages:
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type job
            relations
              define can_read: [role#assignee, user:*]
        tuples:
          - user: user:*
            relation: can_read
            object: job:1
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true
          - tuple:
              user: user:2
              relation: can_read
              object: job:1
            expectation: true
      - model: |
          model
            schema 1.1
          type user
          type role
            relations
              define assignee: [user]
          type job
            relations
              define can_read: [role#assignee]
        tuples:
          - object: job:1
            user: role:admin#assignee
            relation: can_read
          - user: user:1
            relation: assignee
            object: role:admin
        checkAssertions:
          - tuple:
              user: user:1
              relation: can_read
              object: job:1
            expectation: true
          - tuple:
              user: user:2
              relation: can_read
              object: job:1
            expectation: false